[["index.html", "A Minimal Book Example Chapter 1 About 1.1 Usage 1.2 Render book 1.3 Preview book", " A Minimal Book Example John Doe 2022-05-26 Chapter 1 About This is a sample book written in Markdown. You can use anything that Pandoc’s Markdown supports; for example, a math equation \\(a^2 + b^2 = c^2\\). 1.1 Usage Each bookdown chapter is an .Rmd file, and each .Rmd file can contain one (and only one) chapter. A chapter must start with a first-level heading: # A good chapter, and can contain one (and only one) first-level heading. Use second-level and higher headings within chapters like: ## A short section or ### An even shorter section. The index.Rmd file is required, and is also your first book chapter. It will be the homepage when you render the book. 1.2 Render book You can render the HTML version of this example book without changing anything: Find the Build pane in the RStudio IDE, and Click on Build Book, then select your output format, or select “All formats” if you’d like to use multiple formats from the same book source files. Or build the book from the R console: bookdown::render_book() To render this example to PDF as a bookdown::pdf_book, you’ll need to install XeLaTeX. You are recommended to install TinyTeX (which includes XeLaTeX): https://yihui.org/tinytex/. 1.3 Preview book As you work, you may start a local server to live preview this HTML book. This preview will update as you edit the book when you save individual .Rmd files. You can start the server in a work session by using the RStudio add-in “Preview book”, or from the R console: bookdown::serve_book() "],["installation-guide.html", "Chapter 2 Installation Guide 2.1 Install the Prerequisites 2.2 Install RAVE 2.3 Starting RAVE 2.4 Closing RAVE 2.5 Updating RAVE", " Chapter 2 Installation Guide Installing RAVE involves two parts: 1). installing the pre-requisites 2). downloading RAVE Carefully follow the steps below to install RAVE: Note: For optimal use of RAVE, it is recommended your computer has at least 64GB RAM and a 4-core CPU. 2.1 Install the Prerequisites Because RAVE is written in the programming language “R”, it is necessary to download R and its integrated development editor “RStudio” onto your computer. Correctly installing the following pre-requisites is necessary for RAVE to work properly. Note: RAVE requires the latest versions of R and RStudio to run properly. To avoid errors in the download process, if you already have R and RStudio on your computer, be sure they are updated to the most recently released versions. 2.1.1 MacOS 2.1.1.1 Install Homebrew Homebrew is a package manager that adds functions missing from the Apple operating system. It can be installed by copying and pasting the following line into your terminal (note: the terminal can be found through searching the applications folder on your computer): /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; If you have not downloaded Homebrew to your computer before, you will be prompted with the following questions: ==&gt; Checking for `sudo` access (which may request your password)... Password: Please enter your user password. The password you typed won’t be displayed into the screen. Once you’ve finished, press the return or enter key to proceed. ==&gt; This script will install: ... Press RETURN/ENTER to continue or any other key to abort: Please press the RETURN or ENTER key to continue. Add brew to path The terminal commands used to add homebrew to the path depend on your computer’s CPU chip. Copy and paste the appropriate command lines based on your computer’s chip type. For M1 Chips echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile For Intel Chips 2.1.1.2 Install R Language Download the latest version of R directly from the website: https://cran.r-project.org/bin/macosx/ Be sure to download the package that corresponds to your computer’s OS version and CPU type. For Intel Macs, download R-X.X.X.pkg For M1 Macs, download R-X.X.X-arm64.pkg 2.1.1.3 Install RStudio Desktop You can install RStudio Desktop by directly downloading from the website. Visit the following link to download the application: https://www.rstudio.com/products/rstudio/download/ Be sure to download the version that corresponds to your OS system. Refer to the following screenshot for guidance. Screenshot of RStudio Website 2.1.1.4 Install system libraries You will need to download the libraries hdf5, fftw, and pkg-config. This can be done by copying and pasting the following line into your terminal: brew install hdf5 fftw pkg-config 2.1.1.5 Troubleshooting 2.2 Install RAVE Now that you have installed the pre-requisites, the following steps will walk you through the process of downloading and installing the RAVE application on your computer. 2.2.1 Download RAVE packages Open the RStudio application and click on the Console tab located in bottom left panel of your screen. Copy and paste the following command onto the console to download the RAVE packages from the online repository: options(repos = c(ropensci = &#39;https://beauchamplab.r-universe.dev&#39;, CRAN = &#39;https://cloud.r-project.org&#39;)) 2.2.2 Install RAVE packages on RStudio Copy and paste the following command into the RStudio console to install RAVE and its built-in modules onto your computer. install.packages(c(&#39;rave&#39;, &#39;ravebuiltins&#39;)) Please note that this process can take some time. 2.2.3 Update RAVE to most recent version Copy and paste the following command into the RStudio console to update RAVE and its dependencies to the most recent version. rave::check_dependencies(nightly = TRUE) 2.2.4 Download and install templates and demo subject data Copy and paste the following command into the RStudio console to download template and demo subject data. This will allow you to try out RAVE’s features with sample data! rave::finalize_installation(upgrade = &#39;ask&#39;) You have successfully downloaded RAVE! 2.2.4.1 Troubleshooting 2.3 Starting RAVE Note: you must quit and restart RStudio if you have just downloaded or updated RAVE in order for the application to start successfully. After restarting RStudio, copy and paste the following command into the RStudio console to open RAVE: rave::start_rave() RAVE will display in a new web browser (Google Chrome is recommended for optimal use). A screenshot is displayed below: 2.4 Closing RAVE 2.5 Updating RAVE If you’ve already downloaded RAVE and simply wish to update the application to the most recent version, copy and paste the following command into the RStudio console: rave::check_dependencies(nightly = TRUE) Note: You must stop processes that are currently being executed by the console before trying to initiate another command. To do this, click the red stop sign on the bottom left panel of RStudio. For example, if you have just opened RAVE and wish to update the application, click the red stop sign. Refer to the following screenshot for guidance. Note: When re-updating, a pop-up might appear in RStudio asking if you want to reinstall the N27 template brain. As the template is already installed, you can click no. Screenshot of RStudio console stop sign "],["cross.html", "Chapter 3 Cross-references 3.1 Chapters and sub-chapters 3.2 Captioned figures and tables", " Chapter 3 Cross-references Cross-references make it easier for your readers to find and link to elements in your book. 3.1 Chapters and sub-chapters There are two steps to cross-reference any heading: Label the heading: # Hello world {#nice-label}. Leave the label off if you like the automated heading generated based on your heading title: for example, # Hello world = # Hello world {#hello-world}. To label an un-numbered heading, use: # Hello world {-#nice-label} or {# Hello world .unnumbered}. Next, reference the labeled heading anywhere in the text using \\@ref(nice-label); for example, please see Chapter 3. If you prefer text as the link instead of a numbered reference use: any text you want can go here. 3.2 Captioned figures and tables Figures and tables with captions can also be cross-referenced from elsewhere in your book using \\@ref(fig:chunk-label) and \\@ref(tab:chunk-label), respectively. See Figure 3.1. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 3.1: Here is a nice figure! Don’t miss Table 3.1. knitr::kable( head(pressure, 10), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 3.1: Here is a nice table! temperature pressure 0 0.0002 20 0.0012 40 0.0060 60 0.0300 80 0.0900 100 0.2700 120 0.7500 140 1.8500 160 4.2000 180 8.8000 "],["parts.html", "Chapter 4 Parts", " Chapter 4 Parts You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["footnotes-and-citations.html", "Chapter 5 Footnotes and citations 5.1 Footnotes 5.2 Citations", " Chapter 5 Footnotes and citations 5.1 Footnotes Footnotes are put inside the square brackets after a caret ^[]. Like this one 1. 5.2 Citations Reference items in your bibliography file(s) using @key. For example, we are using the bookdown package (Xie 2022) (check out the last code chunk in index.Rmd to see how this citation key was added) in this sample book, which was built on top of R Markdown and knitr (Xie 2015) (this citation was added manually in an external file book.bib). Note that the .bib files need to be listed in the index.Rmd with the YAML bibliography key. The RStudio Visual Markdown Editor can also make it easier to insert citations: https://rstudio.github.io/visual-markdown-editing/#/citations References "],["blocks.html", "Chapter 6 Blocks 6.1 Equations 6.2 Theorems and proofs 6.3 Callout blocks", " Chapter 6 Blocks 6.1 Equations Here is an equation. \\[\\begin{equation} f\\left(k\\right) = \\binom{n}{k} p^k\\left(1-p\\right)^{n-k} \\tag{6.1} \\end{equation}\\] You may refer to using \\@ref(eq:binom), like see Equation (6.1). 6.2 Theorems and proofs Labeled theorems can be referenced in text using \\@ref(thm:tri), for example, check out this smart theorem 6.1. Theorem 6.1 For a right triangle, if \\(c\\) denotes the length of the hypotenuse and \\(a\\) and \\(b\\) denote the lengths of the other two sides, we have \\[a^2 + b^2 = c^2\\] Read more here https://bookdown.org/yihui/bookdown/markdown-extensions-by-bookdown.html. 6.3 Callout blocks The R Markdown Cookbook provides more help on how to use custom blocks to design your own callouts: https://bookdown.org/yihui/rmarkdown-cookbook/custom-blocks.html "],["sharing-your-book.html", "Chapter 7 Sharing your book 7.1 Publishing 7.2 404 pages 7.3 Metadata for sharing", " Chapter 7 Sharing your book 7.1 Publishing HTML books can be published online, see: https://bookdown.org/yihui/bookdown/publishing.html 7.2 404 pages By default, users will be directed to a 404 page if they try to access a webpage that cannot be found. If you’d like to customize your 404 page instead of using the default, you may add either a _404.Rmd or _404.md file to your project root and use code and/or Markdown syntax. 7.3 Metadata for sharing Bookdown HTML books will provide HTML metadata for social sharing on platforms like Twitter, Facebook, and LinkedIn, using information you provide in the index.Rmd YAML. To setup, set the url for your book and the path to your cover-image file. Your book’s title and description are also used. This gitbook uses the same social sharing data across all chapters in your book- all links shared will look the same. Specify your book’s source repository on GitHub using the edit key under the configuration options in the _output.yml file, which allows users to suggest an edit by linking to a chapter’s source file. Read more about the features of this output format here: https://pkgs.rstudio.com/bookdown/reference/gitbook.html Or use: ?bookdown::gitbook "],["references.html", "References", " References "]]
