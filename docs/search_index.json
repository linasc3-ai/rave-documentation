[["installation-guide.html", "Chapter 2 Installation Guide", " Chapter 2 Installation Guide RAVE is written as an ‚ÄúR‚Äù package. To properly install RAVE, please carefully follow the instructions step-by-step. We found that the vast majority of installation issues are due to not following the instructions. Hardware Requirements Minimal requirement: 4 CPU cores with 8 GB RAM Recommended: 8+ CPU with 32+ GB RAM System Library Prerequisites MacOS Windows Debian Linux (Ubuntu) "],["system-prerequisites.html", "2.1 System Prerequisites", " 2.1 System Prerequisites RAVE is written in the programming language ‚ÄúR‚Äù, so it is necessary to download the latest version of R on the computer. It is strongly recommended to install ‚ÄúRStudio‚Äù, an integrated development environment, in order to easily utilize RAVE features. This section will guide the installation of these and other prerequisites. Please click on the following links according to your operating systems. MacOS Windows Debian Linux (Ubuntu) 2.1.1 MacOS [STEP 1: Install Homebrew] (Note: if you have downloaded Homebrew in the past, please skip Step 1 and 2 and jump to the Step 3.) Homebrew is a package manager that adds system libraries missing from the Apple operating system. It can be installed by copying and pasting the following line into the terminal (note: the terminal can be found through searching the applications folder on the computer): /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; If this is the first time installing Homebrew, the following questions might be prompted: ==&gt; Checking for `sudo` access (which may request your password)... Password: Enter your user‚Äôs password (the password won‚Äôt be displayed into the screen as you type for security reasons). Once finished, press the RETURN or ENTER key to proceed. ==&gt; This script will install: ... Press RETURN/ENTER to continue or any other key to abort: Please press the RETURN or ENTER key to continue. [STEP 2: Add command ‚Äúbrew‚Äù to system search path] The terminal commands used to add homebrew to the path depend on your computer‚Äôs CPU chip. Copy and paste the appropriate command lines into the terminal based on your computer‚Äôs chip type. If you don‚Äôt know the CPU type, click the Ô£ø icon on the top-right, and choose About This Mac. For M1 Chips echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile For Intel Chips echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile [STEP 3: Use brew to install missing libraries] Open the system terminal, paste the following line and press return key: brew install hdf5 fftw pkg-config This command installs the following three libraries: hdf5: Shared library to access the universal HDF5 file format fftw: Fast-Fourier transform library required by signal processing code pkg-config: Package configuration helpers allowing R to find the two libraries above [STEP 4: Install R] Download and install the latest version of R directly from the website: https://cran.r-project.org/bin/macosx/ Be sure to download the package that corresponds to the computer‚Äôs OS version and CPU type. If R has been installed, we highly recommend updating to the latest version. For Intel Macs, the R installer name should look like R-X.X.X.pkg For M1 Macs, the R installer name should look like R-X.X.X-arm64.pkg [STEP 5: Install RStudio Desktop] Download and install RStudio Desktop directly from the website: https://www.rstudio.com/products/rstudio/download/ Be sure to download the version that corresponds to the OS system. If RStudio is already downloaded, simply ensure it is updated to the latest version. Refer to the following screenshot for guidance. Screenshot of RStudio download site "],["install-rave.html", "2.2 Install RAVE", " 2.2 Install RAVE Important: Before proceeding to rest of this section. Please make sure you have read and finished the previous section: ‚ÄúSystem prerequisites‚Äù. Step #1: Download and Configure Open the RStudio application and click on the Console tab. If RStudio adopts the default settings, this tab should be located in bottom-left. Important: Please do NOT mix an R command with a shell command. When running R command, please open RStudio and use the Console tab to run. If you direct copy the R scripts into system shell terminals, the script will fail! Copy and paste the following R command into the RStudio console to install RAVE and its dependencies from online repositories: options(repos = c(ropensci = &#39;https://beauchamplab.r-universe.dev&#39;, CRAN = &#39;https://cloud.r-project.org&#39;)) install.packages(c(&#39;rave&#39;, &#39;ravebuiltins&#39;, &#39;ravedash&#39;)) Copy and paste the following command into the RStudio console to update RAVE to the latest version (with bug fixes and new features): rave::check_dependencies(nightly = TRUE) Execute the following R command to download extra data and templates: rave::finalize_installation(upgrade = &#39;always&#39;) This finalizing step will download the following additional parts: Template brain: (N27, fsaverage) for group-level electrode template mapping Demo subject data: for demonstration purposes Built-in modules and pipelines Step #2: Validate the Installation To check whether RAVE has been properly installed, execute the following R command to start the program. rave::start_rave() If installation was successful, a new web browser window should automatically open with the RAVE display. A screenshot is shown below: RAVE Start Screen üéâ You have successfully downloaded RAVE! Now that installation was completed, visit the following pages to start using RAVE! Starting RAVE Upgrade RAVE Change RAVE settings "],["download-demo-data.html", "2.3 Download demo data", " 2.3 Download demo data Before importing lab data, to gain familiarity it is recommended to try RAVE‚Äôs demo data in various modules. By default, RAVE already has a DemoSubject whose raw data has already been imported. However, you can also download other demo subjects by copying and pasting the following command into the RStudio console: rave::download_sample_data(&quot;subject_code&quot;) Substitute ‚Äúsubject_code‚Äù with one of the available demo subjects: KC, YAB, YAD, YAF, YAH, YAI, YAJ, and YAK. For example, to download subject YAB, use the following command: rave::download_sample_data(&quot;YAB&quot;) Note that downloaded demo data will be stored in the raw_dir folder of the rave_data folder in your home directory. Within raw_dir, each subject‚Äôs data is stored in its own folder (e.g.¬†YAB‚Äôs data will be stored in the YAB folder in raw_dir). Refer to the following screenshot for clarity. Screenshot of location of downloaded demo data Proceed to the ‚Äúimporting demo data‚Äù instructions to load your newly downloaded raw data into RAVE for cleaning. "],["upgrade-rave.html", "2.4 Upgrade RAVE", " 2.4 Upgrade RAVE RAVE is actively under development with new features and bug fixes. To enjoy the new features, RAVE has built-in function that allows to update itself directly from the following R command: rave::check_dependencies(nightly = TRUE) When upgrading RAVE in RStudio, a pop-up dialogue might appear asking if you want to re-install the N27 template brain or pipeline modules. Simply choose ‚Äúyes‚Äù. Please make sure you have access to the internet when upgrading. "],["troubleshooting.html", "2.5 Troubleshooting", " 2.5 Troubleshooting Possible errors during the installation of RAVE and their solutions: Error: ‚ÄúCan‚Äôt update lock in /usr/local/var/homebrew/locks‚Äù. This error could occur if thee computer has multiple accounts, and the current active account does not have the right to manage brew libraries. Please login with account that has the privilege to manage HomeBrew and use that account to install. Error: ‚ÄúNo available formula with the name ‚Äù. There might be an issue with your Homebrew: it cannot find proper formula (recipe needed to brew libraries). Please try reseting the brew repository by: rm -rf &quot;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core&quot; brew tap homebrew/core "],["install-external-programs-dcm2niix-freesurfer-fsl-afni.html", "2.6 Install external programs (dcm2niix, FreeSurfer, FSL, AFNI)", " 2.6 Install external programs (dcm2niix, FreeSurfer, FSL, AFNI) The following external programs are used by RAVE in the Surface Reconstruction and Electrode Localization module, and so it is helpful to download them now. Note: If trying to download FreeSurfer, FSL, or AFNI on a Mac, it is necessary to download and install Xquartz release from https://www.xquartz.org. Xquartz enables applications that were not designed for MacOS to still run on Mac computers. dcm2niix: A package used to convert DICOM image files into the NifTi-1 file format. Visit the [GitHub repository] (https://github.com/rordenlab/dcm2niix/blob/master/README.md#install). There are various ways to install based on the computer‚Äôs operating system. FreeSurfer: A package used for the analysis and visualization of neuroimaging data. RAVE uses it to reconstruct cortical surfaces based on a subject‚Äôs MRI scan. Visit the FreeSurfer wiki. There are various ways to install based on the computer‚Äôs operating system. Note: When RAVE invokes FreeSurfer, an error may arise indicating that the FreeSurfer license file was not found. To avoid errors down the road, visit https://surfer.nmr.mgh.harvard.edu/fswiki/License. Follow the instructions to fill out a form requesting the free license key, recieve a license.txt file via email, and then place that file in the appropriate folder. FSL OR ANFI: FSL is a library used for the analysis of fMRI, MRI, and DTI brain images. ANFI (Analysis of Functional NeuroImages) is a software used for the analysis and display of MRI data. Pick either one to download; RAVE will use the selected program to align a CT scan to a MRI image. FSL: Visit the FSL Website. Fill out the form to request a FSL license and specify the computer‚Äôs operating system. Instructions will then be given for the selected system. Pay particular attention to any notes given in the instructions (e.g.¬†administrative privileges, Mac Monterey users). AFNI: Visit the AFNI Website. Select the appropriate link based on the computer‚Äôs operating system. In the resulting download guide, please skip over steps to install Homebrew and R as installing RAVE already necessitated doing so. (The most important step is ‚ÄúInstall AFNI‚Äù.) When following the final step, ‚ÄúEvaluating Setup,‚Äù any warnings regarding an old X version, login shell, matplotlib, or insufficient data for AFNI bootcamp can be ignored as RAVE does not require these configurations. "]]
