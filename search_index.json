[["index.html", "RAVE Documentation Chapter 1 Introduction", " RAVE Documentation 2022-08-09 Chapter 1 Introduction The above video provides a brief introduction of what RAVE is, including key features and benefits. R Analysis and Visualization of intracranial EEG (RAVE) is free and open-source software for the analysis of intracranial electroencephalogram (iEEG) data, including data collected using strips and grids (electrocorticography, ECoG) and depth electrodes (stereotactic EEG). RAVE official wiki https://rave.wiki Contact us: help@rave.wiki What‚Äôs NEW! Citation: RAVE has been developed since 2017 with funding provided by NIH-1R24MH117529. If you use RAVE, please cite: Magnotti, J. F., Wang, Z., &amp; Beauchamp, M. S. (2020). RAVE: Comprehensive open-source software for reproducible analysis and visualization of intracranial EEG data. NeuroImage, 223, 117341. [DOI] "],["showcases.html", "Showcases", " Showcases Conference posters: 2022 NIH BRAIN Initiative Selected journal paper using RAVE: Wang, Z., Magnotti, J., Beauchamp, M.S. and Li, M. (2022) Functional group bridge for simultaneous regression and support estimation. Biometrics, 00, 1‚Äì 13. [DOI] Adkinson, J.A., Tsolaki, E., Sheth, S.A., Metzger, B.A., Robinson M.E., Oswalt, D., McIntyre, C.C., Mathura, R.K., Waters, A.C., Allawala, A.B., Noecker, A.M. (2022) Imaging versus electrographic connectivity in human mood-related fronto-temporal networks. Brain Stimulation, 15(3), 554-65. [DOI] Metzger, B,A., Magnotti, J.F., Wang, Z., Nesbitt, E., Karas, P.J., Yoshor, D., Beauchamp, M.S. (2020) Responses to visual speech in human posterior superior temporal gyrus examined with iEEG deconvolution. Journal of Neuroscience, 40(36), 6938-48. [DOI] Geyer, K., Campbell, F., Chang, A., Magnotti, J.F., Beauchamp, M.S., Allen, G.I. (2020) Interpretable visualization and higher-order dimension reduction for ECoG data. 2020 IEEE International Conference on Big Data (Big Data), pp.¬†2664-2673. [DOI] Metzger, B.A., Kalva, P., Mocchi, M.M., Cui, B., Adkinson, J.A., Wang, Z., Mathura, R., Gavvala, J., Krishnan, V., Lin, L., Maheshwari, A. (2022) Intracranial EEG spectral feature analysis and focal brain stimulation reveal affective specialization within dorsal anterior cingulate cortex. bioRxiv. [DOI] Karas, P.J., Magnotti, J.F., Metzger, B.A., Zhu, L.L., Smith, K.B., Yoshor, D., Beauchamp, M.S. (2019) The visual speech head start improves perception and reduces superior temporal cortex responses to auditory speech. Elife, 8;8:e48116. [DOI] "],["installation-guide.html", "Chapter 2 Installation Guide", " Chapter 2 Installation Guide RAVE is written as an ‚ÄúR‚Äù package. To properly install RAVE, please carefully follow the instructions step-by-step. We found that the vast majority of installation issues are due to not following the instructions. Hardware Requirements Minimal requirement: 4 CPU cores with 8 GB RAM Recommended: 8+ CPU with 32+ GB RAM System Library Prerequisites MacOS Windows Debian Linux (Ubuntu) "],["system-prerequisites.html", "2.1 System Prerequisites", " 2.1 System Prerequisites RAVE is written in the programming language ‚ÄúR‚Äù, so it is necessary to download the latest version of R on the computer. It is strongly recommended to install ‚ÄúRStudio‚Äù, an integrated development environment, in order to easily utilize RAVE features. This section will guide the installation of these and other prerequisites. Please click on the following links according to your operating systems. MacOS Windows Debian Linux (Ubuntu) 2.1.1 MacOS [STEP 1: Install Homebrew] (Note: if you have downloaded Homebrew in the past, please skip Step 1 and 2 and jump to the Step 3.) Homebrew is a package manager that adds system libraries missing from the Apple operating system. It can be installed by copying and pasting the following line into the terminal (note: the terminal can be found through searching the applications folder on the computer): /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; If this is the first time installing Homebrew, the following questions might be prompted: ==&gt; Checking for `sudo` access (which may request your password)... Password: Enter your user‚Äôs password (the password won‚Äôt be displayed into the screen as you type for security reasons). Once finished, press the RETURN or ENTER key to proceed. ==&gt; This script will install: ... Press RETURN/ENTER to continue or any other key to abort: Please press the RETURN or ENTER key to continue. [STEP 2: Add command ‚Äúbrew‚Äù to system search path] The terminal commands used to add homebrew to the path depend on your computer‚Äôs CPU chip. Copy and paste the appropriate command lines into the terminal based on your computer‚Äôs chip type. If you don‚Äôt know the CPU type, click the Ô£ø icon on the top-right, and choose About This Mac. For M1 Chips echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile For Intel Chips echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile [STEP 3: Use brew to install missing libraries] Open the system terminal, paste the following line and press return key: brew install hdf5 fftw pkg-config This command installs the following three libraries: hdf5: Shared library to access the universal HDF5 file format fftw: Fast-Fourier transform library required by signal processing code pkg-config: Package configuration helpers allowing R to find the two libraries above [STEP 4: Install R] Download and install the latest version of R directly from the website: https://cran.r-project.org/bin/macosx/ Be sure to download the package that corresponds to the computer‚Äôs OS version and CPU type. If R has been installed, we highly recommend updating to the latest version. For Intel Macs, the R installer name should look like R-X.X.X.pkg For M1 Macs, the R installer name should look like R-X.X.X-arm64.pkg [STEP 5: Install RStudio Desktop] Download and install RStudio Desktop directly from the website: https://www.rstudio.com/products/rstudio/download/ Be sure to download the version that corresponds to the OS system. If RStudio is already downloaded, simply ensure it is updated to the latest version. Refer to the following screenshot for guidance. Screenshot of RStudio download site "],["install-rave.html", "2.2 Install RAVE", " 2.2 Install RAVE Important: Before proceeding to rest of this section. Please make sure you have read and finished the previous section: ‚ÄúSystem prerequisites‚Äù. Step #1: Download and Configure Open the RStudio application and click on the Console tab. If RStudio adopts the default settings, this tab should be located in bottom-left. Important: Please do NOT mix an R command with a shell command. When running R command, please open RStudio and use the Console tab to run. If you direct copy the R scripts into system shell terminals, the script will fail! Copy and paste the following R command into the RStudio console to install RAVE and its dependencies from online repositories: options(repos = c(ropensci = &#39;https://beauchamplab.r-universe.dev&#39;, CRAN = &#39;https://cloud.r-project.org&#39;)) install.packages(c(&#39;rave&#39;, &#39;ravebuiltins&#39;, &#39;ravedash&#39;)) Copy and paste the following command into the RStudio console to update RAVE to the latest version (with bug fixes and new features): rave::check_dependencies(nightly = TRUE) Execute the following R command to download extra data and templates: rave::finalize_installation(upgrade = &#39;always&#39;) This finalizing step will download the following additional parts: Template brain: (N27, fsaverage) for group-level electrode template mapping Demo subject data: for demonstration purposes Built-in modules and pipelines Step #2: Validate the Installation To check whether RAVE has been properly installed, execute the following R command to start the program. rave::start_rave() If installation was successful, a new web browser window should automatically open with the RAVE display. A screenshot is shown below: RAVE Start Screen üéâ You have successfully downloaded RAVE! Now that installation was completed, visit the following pages to start using RAVE! Starting RAVE Upgrade RAVE Change RAVE settings "],["download-demo-data.html", "2.3 Download demo data", " 2.3 Download demo data Before importing lab data, to gain familiarity it is recommended to try RAVE‚Äôs demo data in various modules. By default, RAVE already has a DemoSubject whose raw data has already been imported. However, you can also download other demo subjects by copying and pasting the following command into the RStudio console: rave::download_sample_data(&quot;subject_code&quot;) Substitute ‚Äúsubject_code‚Äù with one of the available demo subjects: KC, YAB, YAD, YAF, YAH, YAI, YAJ, and YAK. For example, to download subject YAB, use the following command: rave::download_sample_data(&quot;YAB&quot;) Note that downloaded demo data will be stored in the raw_dir folder of the rave_data folder in your home directory. Within raw_dir, each subject‚Äôs data is stored in its own folder (e.g.¬†YAB‚Äôs data will be stored in the YAB folder in raw_dir). Refer to the following screenshot for clarity. Screenshot of location of downloaded demo data Proceed to the ‚Äúimporting demo data‚Äù instructions to load your newly downloaded raw data into RAVE for cleaning. "],["upgrade-rave.html", "2.4 Upgrade RAVE", " 2.4 Upgrade RAVE RAVE is actively under development with new features and bug fixes. To enjoy the new features, RAVE has built-in function that allows to update itself directly from the following R command: rave::check_dependencies(nightly = TRUE) When upgrading RAVE in RStudio, a pop-up dialogue might appear asking if you want to re-install the N27 template brain or pipeline modules. Simply choose ‚Äúyes‚Äù. Please make sure you have access to the internet when upgrading. "],["troubleshooting.html", "2.5 Troubleshooting", " 2.5 Troubleshooting Possible errors during the installation of RAVE and their solutions: Error: ‚ÄúCan‚Äôt update lock in /usr/local/var/homebrew/locks‚Äù. This error could occur if thee computer has multiple accounts, and the current active account does not have the right to manage brew libraries. Please login with account that has the privilege to manage HomeBrew and use that account to install. Error: ‚ÄúNo available formula with the name ‚Äù. There might be an issue with your Homebrew: it cannot find proper formula (recipe needed to brew libraries). Please try reseting the brew repository by: rm -rf &quot;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core&quot; brew tap homebrew/core "],["install-external-programs-dcm2niix-freesurfer-fsl-afni.html", "2.6 Install external programs (dcm2niix, FreeSurfer, FSL, AFNI)", " 2.6 Install external programs (dcm2niix, FreeSurfer, FSL, AFNI) The following external programs are used by RAVE in the Surface Reconstruction and Electrode Localization module, and so it is helpful to download them now. dcm2niix: A package used to convert DICOM image files into the NifTi-1 file format. FreeSurfer: A package used for the analysis and visualization of neuroimaging data. RAVE uses it to reconstruct cortical surfaces based on a subject‚Äôs MRI scan. FSL OR ANFI: FSL is a library used for the analysis of fMRI, MRI, and DTI brain images. ANFI (Analysis of Functional NeuroImages) is a software used for the analysis and display of MRI data. Pick either one to download; RAVE will use the selected program to align a CT scan to a MRI image. For download instructions, see the following resources: dcm2niix: Visit the [GitHub repository] (https://github.com/rordenlab/dcm2niix/blob/master/README.md#install). There are various ways to install based on the computer‚Äôs operating system. FreeSurfer: Visit the FreeSurfer wiki. There are various ways to install based on the computer‚Äôs operating system. Note: When RAVE invokes FreeSurfer, an error may arise indicating that the FreeSurfer license file was not found. To avoid errors down the road, visit https://surfer.nmr.mgh.harvard.edu/fswiki/License. Follow the instructions to fill out a form requesting the free license key, recieve a license.txt file via email, and then place that file in the appropriate folder. Note: If trying to download FreeSurfer on a Mac, it is necessary to download and install the Xquartz 2.8.2 release from https://www.xquartz.org. Xquartz enables applications that were not designed for MacOS to still run on Mac computers. FSL: Visit the FSL Website. Fill out the form to request a FSL license and specify the computer‚Äôs operating system. Instructions will then be given for the selected system. Pay particular attention to any notes given in the instructions (e.g.¬†administrative privileges, Mac Monterey users). Note: If trying to download FSL on a Mac, it is necessary to download and install Xquartz release from https://www.xquartz.org. Xquartz enables applications that were not designed for MacOS to still run on Mac computers. AFNI: Visit the AFNI Website. Select the appropriate link based on the computer‚Äôs operating system. In the resulting download guide, please skip over steps to install Homebrew and R as installing RAVE already necessitated doing so. (The most important step is ‚ÄúInstall AFNI‚Äù.) When following the final step, ‚ÄúEvaluating Setup,‚Äù any warnings regarding an old X version, login shell, matplotlib, or insufficient data for AFNI bootcamp can be ignored as RAVE does not require these configurations. Note: If trying to download AFNI on a Mac, it is necessary to download and install Xquartz from https://www.xquartz.org. Xquartz enables applications that were not designed for MacOS to still run on Mac computers. "],["get-started.html", "Chapter 3 Get Started", " Chapter 3 Get Started Now that RAVE has successfully been installed, review the following instructions to get started using it. "],["overview-of-rave-structure.html", "3.1 Overview of RAVE Structure", " 3.1 Overview of RAVE Structure Main Application The main application allows for the analysis of cleaned iEEG data. Access it by copying and pasting the following command into the RStudio console: rave::start_rave() Sample screenshot of RAVE main application Preprocess The preprocess application allows for the importing of iEEG data into RAVE and preparing it for analysis in future modules. Access it by copying and pasting the following command into the RStudio console: rave::rave_preprocess() It includes four sections: * Overview: * Notch Filter: * Wavelet: * Localization Screenshot of RAVE preprocess Options The options application allows for the editing of RAVE settings. To access options, copy and paste the following command into the RStudio console: rave::rave_options() Modules: Summary of all RAVE modules Core Settings: change where RAVE data is stored. System: change RAM and number of CPU cores RAVE can use to alter speed at which data is read 3D Viewer: change which downloaded brain data to use as the template brain for electrode template mapping; the default template brain is N27. Screenshot of RAVE options "],["starting-and-closing-rave.html", "3.2 Starting and Closing RAVE", " 3.2 Starting and Closing RAVE Starting RAVE Note: it is necessary to quit and restart RStudio if RAVE has just been downloaded or updated, in order for the application to start successfully. After restarting RStudio, copy and paste the following command into the RStudio console to open RAVE: rave::start_rave() RAVE will display in a new web browser (Google Chrome is recommended for optimal use). Closing RAVE To completely close the RAVE server: 1). Click the red stop sign in the bottom left panel of RStudio (refer to the screenshot below to find the stop sign). Screenshot of RStudio console stop sign 2). Quit the RStudio application. If asked whether to Save workspace image?, click no. Note: Closing the RAVE display tab on the web browser will only close the display, not the actual RAVE server. Note: In general, it is necessary to stop processes that are currently being executed by the console before trying to initiate another command. To do this, click the red stop sign on the bottom left panel of RStudio. For example, if RAVE has just been opened and one wants to open the preprocessing application next, click the red stop sign first. "],["get-data-into-rave.html", "Chapter 4 Get Data into RAVE", " Chapter 4 Get Data into RAVE Now that you have installed and gotten started with RAVE, you can proceed to importing your iEEG data into the software so that it can be preprocessed and used in future modules. It is non-trivial to import data into RAVE. Luckily, RAVE supports multiple universal file conventions such as HDF5, EDF(+), BrainVision, and Matlab data formats. With more and more data formats supported, RAVE will become less dependent on 3rd-party softwares. This chapter will guide you through the following topics: File hierarchy and specification Overview: Voltage data Import Matlab/HDF5 file per electrode per block Import One Matlab/HDF5 file per session block Import Single EDF(+) file per block Import Single BrainVision file per block Overview: Neuro-Imaging data Import MR imaging data Import FreeSurfer data Import CT data "],["file-hierarchy-and-specification.html", "4.1 File hierarchy and specification", " 4.1 File hierarchy and specification There are two major data folders in RAVE. One contains the raw, unprocessed data such as analog traces, MRI/CT scans. The other stores processed data which is self-contained and portable. Both data folders are located at your home directory. To get the locations of these two folders, please launch a blank RAVE session: rave::start_session() TODO: Add a figure with captions showing where to find these settings TODO Also add a walk-through to each folders This next section focuses on how to organize the raw data folder. The goal is to import the electrophysiological data into RAVE. "],["overview-voltage-data.html", "4.2 Overview: Voltage data", " 4.2 Overview: Voltage data RAVE supports various of data formats such as HDF5, EDF(+), BrainVision, and Matlab, etc‚Ä¶ Before discussing about these data formats, let‚Äôs start from the general workflow with the demo data that has already been installed. (If you haven‚Äôt downloaded demo data, please see here for detailed instructions) Let‚Äôs launch a blank RAVE session: rave::start_session() In the sidebar, open Import Signals &gt; Native Structure ‚Ä¶.. 4.2.1 Format 1 "],["importing-your-own-data.html", "4.3 Importing Your Own Data", " 4.3 Importing Your Own Data If ready to start using RAVE with lab data, follow the steps below to import the data so that it can be preprocessed and used in future modules. 4.3.1 Organizing Your Directories rave::archive_subject "],["preprocessing.html", "Chapter 5 Preprocessing", " Chapter 5 Preprocessing The following steps will walk through the preprocessing of the raw iEEG signal data so that it can optimally be used in future analysis modules. The corresponding modules are: (These must be done first, in order:) Notch Filter Wavelet Referencing (These can be done after, in any order:) Surface Registration Localization Generate Epoch "],["step-1-import-signals.html", "5.1 Step #1: Import Signals", " 5.1 Step #1: Import Signals This step involves importing iEEG data into RAVE so that it can be preprocessed and used in future modules. Step 1.1: Select project &amp; subject First, use the drop down menu to specify which project the cleaned subject data will be stored in. To create a new project, select ‚ÄúNew Project‚Äù from the drop down menu and indicate the desired project name. Note that by default, this project folder will be created within the rave_data folder of the data directory (data_dir), in a new folder for the subject. Next, use the drop down menu to select the code for the subject whose data to import. Note that a subject‚Äôs data should be stored in its own folder within the raw directory (raw_dir folder) within therave_data folder. Click the ‚ÄúCreate Subject‚Äù button to proceed to the next step. Step 1.2: Format &amp; session blocks RAVE defines a block/session as a period of continuous electrode recording. Here, first select the blocks that correspond to the trials to analyze. Note that when a block is selected, a preview of the files it contains will pop-up to the right. This feature helps check that the way the data is stored is consistent with the file type selected. Then, specify the file format the iEEG data is stored in. RAVE currently supports four file formats: .mat/.h5 file per electrode per block single .mat/.h5 file per block single EDF(+) file per block single BrainVision file Note that when a format from the drop down is selected, a brief description of that specific format will pop-up underneath the menu. For more information on these file types, visit the Q&amp;A at Importing Data Step 1.3: Channel information RAVE equates a channel to an electrode. Set the following specifications for the channels: Data file: Channel numbers: Indicate the electrodes to analyze. It is recommended that the preprocessing steps are run on all electrodes at once. Note that RAVE can automatically detect potential electrodes based on the specified blocks and file type; this suggestion is displayed at the bottom of the panel. Physical unit: Indicate the units used to measure voltage. Sample rate: Indicate the rate of the iEEG recording equipment; this value will determine the rate at which the preprocessing will be run. Now, select the Validate &amp; Import button to validate your data. A pop-up will soon appear asking about readiness to import your data. Please double check all the information entered is correct, and then select the Import Data button to proceed. A progress bar will appear in the bottom left corner. A pop-up will soon appear indicating that the subject data was successfully imported into RAVE! Now, use the menu on the left side of the screen to select the first preprocessing module, notch filter. "],["step-2-notch-filter.html", "5.2 Step #2: Notch Filter", " 5.2 Step #2: Notch Filter What is a notch filter? A notch filter blocks a given frequency or a narrow range of frequencies (aka a ‚Äúbandwidth‚Äù) from a signal without affecting the rest of that signal. It is often used to minimize line noise interference in raw iEEG data, which helps ensure that future analyses only consider actual brain data. A common source of this interference is the amplifier used in recording set-ups to convert electrode signals into a form readable by the computer. This interference is commonly introduced at 60 Hz, since that is the standard frequency used in the North American electrical grid system. To apply the notch filter, RAVE performs a fast fourier transform (FFT) of the signal. To learn more about FFT, visit the Q&amp;A section at Notch Filter. To apply the notch filter to your data, follow the steps below. Begin in the Data Selection window to specify which data to perform the notch filter on . Use the drop down to indicate the desired project and subject. Note that pressing the Sync from [Import LFP] module link will automatically select the project and subject that was just imported in the Import Signals module. Proceed by selecting the Load Subject button. A new screen will load with three panels: Filter Settings, Inspection, and Notch. Refer to the following screenshot for guidance. Sample Notch Filter Screen Filter Settings: Begin my indicating the desired configurations for the filter(s). Base frequency refers to the frequency introduced by the amplifier that should be removed. By default, this is set as 60 Hz as that is the frequency introduced by most iEEG amplifiers. x Times sets the multipliers of the base frequency to remove by the filter. This feature accounts for harmonics (waves with frequencies that are positive integer multiples of the base frequency), which result because the signal from the amplifier is not a pure sine wave when undergoing FFT analysis. By default, this value is set as ‚Äú1,2,3‚Äù based on the harmonics that commonly result in iEEG recording set-ups. This default means that 60 Hz (base frequency * 1), 120 Hz (base frequency * 2), 180 Hz (base frequency * 3) are the frequencies that the notch filter will remove. +- Bandwidth (Hz) refers to how wide to make each filter; a higher number will remove a wider range of frequencies whereas a lower number will remove a narrower range of frequencies. Enter one number for each filter. By default, this value is set to 1,2,2 ‚Äì in other words, the filters will remove the bandwidths 59 - 61 Hz (aka 60 Hz +/- 1), 118 - 122 Hz (aka 120 Hz +/- 2), 178 - 182 Hz (aka 180 Hz +/- 2) respectively. Based on these configurations, the bottom of the panel will automatically display a summary of how many filters there are and the bandwidths each will remove. Click the blue Apply Notch Filters button to apply the filters to the data. A pop-up will appear showing a summary of the configurations. Click ‚ÄúConfirm‚Äù to proceed. Inspection: Controls settings of the figures displayed in the Notch: Inspect Signals panel located to the right. Use the block and electrode drop down menus to select the data to display in the Notch: Inspect Signals panel. You can use the previous and next buttons to easily switch between which electrode‚Äôs data is displayed within a selected recording session. The window length slider controls the power range displayed for the Welch periodograms. The more the slider is moved to the right, the wider the dB range on the y-axis. The frequency limit slider controls the frequency range for the Welch periodograms. The more the slider is moved to the right, the higher the frequencies that will be displayed on the x-axis. The number of histogram bins slider controls how wide the voltage ranges on the horizontal axis of the histogram are, where each bin represents a vertical bar on the graph. Choosing a larger number will create narrower voltage ranges and thus more vertical bars, whereas choosing a smaller number will create wider voltage ranges and thus fewer vertical bars. Moving the slider can give a more precise look at which voltages are most represented in the electrode signal. Notch: Inspect Signals: Displays raw and filtered iEEG signals for each channel whose data was imported. The top Local Field Potential Graph plots voltage versus time in seconds to show the raw signal that was recorded from the selected electrode. The red lines on the graph reflect the normalization. The leftmost Welch Periodogram estimates the power of the signal at its component frequencies. Before applying the notch filter, only the original graph will be shown in grey. After the notch filter has been applied, the filtered signal will be shown in red; it should visibly be evident thaat the the power of the signal is reduced at the base and harmonic frequencies. To learn more about the calculation of the Welch Periodogram, visit the Q&amp;A at Notch Filter. The center Welch Periodogram is the same as the leftmost periodogram, except it is transformed to have a logarithmic x-axis. This graph makes viewing the signals at lower frequencies easier. The Histogram Original plots frequency on the vertical axis and voltage on the horizontal axis to depict how often each range of voltages occurs in the signal. To download these figures, simply click the Download as PDF link at the bottom of the Inspection panel. This will generate a PDF file in a new tab with a slide for each electrode within each block. Now, use the menu at left to proceed to the wavelet module! "],["step-3-wavelet.html", "5.3 Step #3: Wavelet", " 5.3 Step #3: Wavelet Once you click the wavelet tab on the left menu, a data selection window will appear to select the project and subject whose data to apply the wavelet decomposition to. (Remember clicking the ‚Äúsync from [import LFP] module‚Äù will automatically select the subject that was just imported.) Note: The notch filter must have been applied to the selected subject before trying to apply the wavelet transformation. After selecting the ‚ÄúLoad Subject‚Äù button, a new screen will load with two panels: Wavelet Settings and Wavelet Kernel. Refer to the following screenshot for guidance. Sample Wavelet Decomposition Screen Wavelet decomposition is a type of time frequency analysis that is used for non-stationary signals (i.e.¬†properties change over time), like that of iEEG. It separates the signal into differing frequency and phase components, which is helpful because signals in the brain are very dynamic. This process makes it so that changes in the signal‚Äôs power spectra can be visualized across both frequency and time. To learn more about how wavelet transform works, visit the Q&amp;A at Wavelet. In this module, RAVE will: - downsample the signal before running the wavelet, if desired - run a wavelet on each block in the selected subject‚Äôs folder - downsample the wavelet coefficients to 100.0 Hz to reduce the amount of space needed to save the information onto the computer‚Äôs disk Wavelet Settings: Begin by setting the basic configurations: Power sample rate refers to the rate at which the signal will be taken into time frequency decomposition. By default, it is recommended to keep this set to the default 100 Hz; this balances the data so that precision is conserved without taking up too much space on the disk. Typically, this value should only be increased if neural signals will be analyzed at very high frequencies. (Note: this is not the same as the signaling rate used in the iEEG recording set-up. For further explanation, see the Q&amp;A at Wavelet.) The Down-sample before wavelet drop down menu has the option to select a factor of 1, 2, 4, or 8 to use to reduce the sample rate. Reducing the sampling rate is done to run the wavelet transform faster and use less of the computer‚Äôs disk space. Note that selecting 1 equates to no reduction in the sampling rate. Reducing the rate by a higher factor allows for analyzing a greater frequency range. To further reduce the amount of time it takes to run the wavelet, please select the use single float precision checkbox. Note: Setting the down-sample value to 1 and leaving the box unchecked will preserve precision of the calculations and is appropriate if there are many hours available to run the wavelet. However, if quick processing of data is needed, such as in clinical situations, it is better to downsample and use single float precision. Proceed by setting the frequency and cycle configurations: The select method to generate wavelet parameters drop down menu determines how the configurations for the wavelet will be set. By default, it is set to ‚Äúbuilt in‚Äù, meaning that the frequency and cycle settings can be set manually on the RAVE interface (see bullet points below). Alternatively, selecting ‚Äúupload preset‚Äù is commonly used to save time if one already has their own set configurations they want to use on the data. An upload button will appear; please upload the preset in the form of a csv with two columns for the frequency and cycles. Proceed straight to running the wavelet via the blue ‚Äúrun wavelet‚Äù button if a preset is uploaded. Use the frequency range slider to select the range of frequencies that will be decomposed with the wavelet. The value selected with the frequency step size slider depends on the frequency desired after the wavelet is performed. Use the wavelet cycles slider to choose the range of cycles to use in the transform. Note that a larger number of cycles will lead to more precise frequency analysis, whereas a smaller number of cycles will lead to more precise temporal analysis. Wavelet Kernel: The figures displayed on this panel visually display the properties of the wavelet given the selected configurations. The Wavelet Kernels (Real &amp; Imaginary) shows the kernel at given frequencies in Hz and times in seconds (aka wavelet length). The Wavelet Length | Frequency graph plots the length of the kernel in seconds at different frequencies in Hz. The Wavelet Cycle | Frequency graph plots the number of cycles for the wavelet at different frequencies in Hz. To download these figures, hover over the top left corner of the panel and a small, grey save icon will appear. Clicking on the icon will generate a pdf with the figures. To download the kernel parameters, click the blue download kernel parameters link at the bottom of the window. This will generate a csv file with each frequency and its corresponding number of cycles. To simply view the parameters on the interface, click anywhere on the panel and it will switch the view to display a table with the frequency and cycle data; click anywhere on this table to switch back to the figure view. (Alternatively, on figure view, click on the table icon in the top right corner of the panel.) When finished setting the configurations and reviewing the figures, select the blue Run Wavelet button. As shown below, a pop-up will appear on the screen asking to confirm the subject, frequencies, # of cycles, and precision selected for the wavelet transformation. Click ‚Äúconfirm‚Äù to proceed, or \"confirm and run in background to continue using RAVE during the decomposition process. Note that this process can take up to 30 minutes; progress bars for each task will be displayed in the lower right corner. Sample Wavelet Decomposition Confirmation Window The process is completed if a ‚Äúsuccess‚Äù pop-up appears. This means that the signal data for the electrodes within each of the subject‚Äôs blocks have been down-sampled (if desired), decomposed by the wavelet into time-frequency data, and down-sampled again. Proceed to the next module, referencing! "],["step-4-reference-channels.html", "5.4 Step #4: Reference Channels", " 5.4 Step #4: Reference Channels Common average referencing After the four steps above have been completed, the remaining modules below can be done in any order: "],["surface-electrodes.html", "5.5 Surface &amp; Electrodes", " 5.5 Surface &amp; Electrodes The surface &amp; electrodes section is composed of two modules: Reconstruction &amp; Coregistration and Electrode Localization. 5.5.1 Reconstruction &amp; Coregistration The Reconstruction &amp; Coregistration module has three main goals: import raw magnetic resonance (MR) and computerized tomography (CT) images into RAVE, reconstruct a model of the subject‚Äôs cortical surface, and align the imported MRI &amp; CT images. These tasks are important to ensure proper running of the Electrode Localization module. There are two panels to note: Data settings and Command-line settings. Refer to the following screenshot for guidance. Sample Reconstruction &amp; Coregistration Window Data Settings: Start by using the project and subject drop down menus to select the subject whose MRI and CT images that will be imported. Once again, using the blue ‚Äúsync project &amp; subject from [Import LFP] module‚Äù link at the bottom of the panel will automatically select the project and subject that was just being worked on. Next, use the MRI drop down menu to select the raw MRI image for the selected subject. RAVE currently accepts two input types for MRI images: DICOM: submit a folder of DICOM files, representing a series of 2D brain slices Nifti: submit a single Nifti file representing the full 3D brain scan (e.g.¬†subject_MRI.nii) Then, use the Raw CT DICOM folder drop down menu to select the raw CT image for the selected subject. Your input should be a DICOM folder. For more information on these file formats, visit the Q&amp;A at Reconstruction &amp; Coregistration. Then, proceed to the command-line settings panel. Command-line settings: The following steps will involve the computer‚Äôs command-line interface. (On Mac, this refers to the Terminal. On Windows, it refers to Command Prompt.) RAVE requires the use of the external programs dcm2niix and FreeSurfer, and then either FSL or AFNI. This panel simply confirms whether the programs were downloaded by displaying the location of the program on the computer. If the file path is not automatically filled in for dcm2niix, FreeSurfer, and your choice of FSL or AFNI, please return to the installation guide at Install External Programs and follow the steps to download the missing software. Descriptions of what these programs do are also available in the installation guide. Now, click the blue Check data and command-line tools button. A pop-up will appear confirming the MRI/CT inputs and what tasks will be completed using the external programs. Please also pay attention to any warnings that will be listed (e.g.¬†if RAVE can not find FSL-flirt, if there is an existing FreeSurfer reconstruction for a subject). In particular, warnings that say ‚Äúthe script will fail/error‚Äù should not be ignored, as that indicates some tasks will can not be completed. (For help resolving common warnings, visit the Q&amp;A at Reconstruction &amp; Coregistration.) When ready, hit ‚Äúproceed‚Äù. The following screen will appear, with four panels: Subject Information, Import DICOM Images, Surface Reconstruction, and Co-Registration CT to T1. Refer to the following screenshot for guidance. Sample Reconstruction &amp; Coregistration Screen Subject Information: The project and subject whose MRI and CT data is currently being used will be displayed here. A task list will also be displayed. By default, three tasks will be listed: 1). Convert .dcm images to .nii, 2). Surface reconstruction, and 3). CT co-registration. Import DICOM Images: Begin here to convert MRI and CT DICOM images to the Nifti format using the dcm2niix external library. The Nifti format will be used by FreeSurfer and FSL/AFNI in later steps. Press on the ‚Äú+‚Äù sign in the right corner of the panel to expand the view. Note: This script requires the Unix bash terminal in order to run commands read from the command-line interface. If using a Mac, this should already be provided. If using Windows, please install the Linux sub-system (WSL2). Specify the following configurations using the drop-down menu: Merge 2D slices from same series regardless of echo, exposure, etc: Select ‚Äúyes‚Äù to force stacking of the slices. Select ‚Äúno‚Äù to separate images according to their echo (MRI), study times, exposure level (CT), orientation, etc for reasons such as preserving contrast. Select ‚Äúauto‚Äù for dcm2niix to automatically decide whether to merge based on the image modality (i.e.¬†MRI vs CT). Note that merging will consolidate slices from the series into one Nifti file, whereas merging can generate multiple Nifti files. Crop 3D acquisitions: Select ‚Äúyes‚Äù to remove excess air as well as neck tissue from the 3D acquisitions. Select ‚Äúno‚Äù if this is not necessary. Select ‚Äúignore‚Äù for images to be neither cropped nor rotated to the nearest orthogonal direction to canonical space (e.g.¬†for non-anatomical scans). Based on these configurations, a series of commands will be automatically generated in the greyspace below. Click the sideways black triangles at the bottom left of the panel to view these commands. Note that there are separate series of commands for the MRI and CT images. Note: The grey text represents comments. The purple texts are the actual commands that will be run by the computer. RAVE provides the choice of copying these commands and running them on the computer‚Äôs command-line interface manually. This is recommended as other RAVE features can still be used while the commands run in the background, which is especially helpful if the commands will take a long time. Select the blue ‚Äúsave &amp; run by yourself‚Äù button; a pop-up will appear and pressing the greyspace will automatically copy the commands. Alternatively, RAVE can run the commands directly. Simply select the grey ‚ÄúRun from RAVE (T1 MRI)‚Äù. A pop-up will appear indicating when dcm2niix has finished converting the MRI images from the DICOM to Nifti format (note that if the MRI file was already in the Nifti format, RAVE will simply make a copy of that file). Then, select the ‚ÄúRun from RAVE (CT)‚Äù button to repeat this process with the CT image. These processes usually take a few seconds. The resulting Nifti MRI and CT files will be stored in an inputs folder within the subject‚Äôs rave-imaging folder. Surface Reconstruction: This panel reconstructs a subject‚Äôs cortical surface using FreeSurfer and the Nifti MRI file. &gt;Note: This script requires the Unix bash terminal in order to run commands read from the command-line interface. If using a Mac, this should already be provided. If using Windows, please install the Linux sub-system (WSL2) Start by selecting the Nifti MRI File desired. (The blue ‚Äúrefresh‚Äù link can be pressed to update the drop-down if changes have recently been made to the subject‚Äôs folder.) Next, select the recon flag, which refers to which FreeSurfer steps are desired for the reconstruction of the brain model. Visit the FreeSurfer website to learn more about the seven choices. Use the drop-down menu on RAVE to select the recon flag that is fitting for the project. A screenshot has been included below for convenience indicating the steps each flag includes: &gt; Note: Most flags can take several hours for the computer to run. If the quickest flag is desired, select -autorecon1 in the drop-down menu; it includes minimal steps and so only takes 10 minutes to run. Proceed to the ‚ÄúRemove existing work before running the command (if applicable)‚Äù checkbox. Selecting the box is appropriate if the subject‚Äôs cortical surface was already partially or fully reconstructed and it is desired to start anew (e.g.¬†if an error resulted due to a licensing issue). By default, this will be unchecked. Commands will be generated in the greyspace below. Click on the black triangle at the bottom of the panel to view the commands. Once again, to run them manually, click the blue ‚ÄúSave &amp; run by yourself‚Äù button. To have RAVE invoke system command, select the ‚ÄúRun from RAVE‚Äù button. A pop-up will appear indicating when the process is completed; at that point, outputs will have been stored in a newly created fs folder in the subject‚Äôs rave-imaging folder. Co-Registration CT to T1: This panel will align and overlay (aka ‚Äúco-register‚Äù) the subject‚Äôs MRI &amp; CT images using either FSL or AFNI. Note: This script requires the Unix bash terminal in order to run commands read from the command-line interface. If using a Mac, this should already be provided. If using Windows, please install the Linux sub-system. Use the drop down menu to select the CT file. (The blue ‚Äúrefresh‚Äù link can be pressed to update the drop-down if changes have recently been made to the subject‚Äôs folder.) Then use the program drop down to specify whether FSL or AFNI will be used. Click the black triangle on the bottom of the panel to display the commands. Once again, select the appropriate button based on whether the commands will be run manually or through RAVE. Note that this process takes around 30 minutes; a pop-up will indicate when it is finished. The output will be a single ct_in_t1.nii.gz file representing the CT scan co-registered with the MRI image. The file is stored in the coregistration folder within the subject‚Äôs rave-imaging folder. Now, proceed to the electrode localization module to begin identifying electrodes! 5.5.2 Electrode Localization RAVE‚Äôs electrode localization module features a built-in 3D viewer and allows for the quick and precise identification of where in the brain electrodes are located. The module is based on the co-registered image of the CT and MRI scans, as well as the reconstruction of the subject‚Äôs cortical surface via the MRI scan. When the electrode localization module is selected, two panels will appear on the screen: Data Selection &amp; Electrode Plan. Refer to the following screenshot for guidance. Data Selection: Begin in the data selection panel at left. Use the project and subject drop down menus to select the subject whose electrodes you wish to localize. You can once again use the ‚ÄúSync from [Import LFP] module‚Äù to automatically select the project and subject that was just imported. Next, use the drop down menu in choose CT aligned to T1 to select the Nifti file representing the co-registered CT and MRI scans (e.g.¬†ct_in_t1.nii that was generated in the previous module). It is alternatively possible to directly upload a co-registered Nifti file by selecting the ‚Äúupload‚Äù option and resulting ‚Äúbrowse‚Äù button. Note that if changes have been made to the file directory, selecting the blue ‚Äúrefresh file list‚Äù link will update the drop down menu. If it is preferred not to localize with the CT image (such as in cases where a CT scan is not yet available), select the checkbox ‚ÄúDo not localize with CT.‚Äù The subject‚Äôs MRI image will be used in lieu. By default, this will be unchecked as using a co-registered CT and MRI image allows for more precise localization of electrodes. Proceed to the Electrode Plan panel. Electrode Plan: This panel allows for the creation of groups to provide a more organized way to localize a subject‚Äôs electrodes. As many or as few groups can be created as desired. Scroll to the bottom of the panel to use the plus button to add a new group, or the minus button to delete the bottom-most group. For each group, specify the: Label: the desired name for the group. Dimension: the number of electrodes within the group. Note: For electrode groups placed in a grid, it is recommended to input the dimensions in the format ‚Äúnumber x number,‚Äù e.g.¬†‚Äú8x4‚Äù, rather than specifying a whole number total, e.g.¬†32. Using this format can help automatically set the 3D viewer‚Äôs configurations for easier localization of electrodes. Type: the type of exam the electrodes came from. Select from electroencephalogram (EEG), intracranial EEG (iEEG), stereotactic EEG (sEEG), ElectroCochleoGraphy (ECoG), or ‚Äúother‚Äù. Note that for each group, a summary will be displayed to indicate the individual electrode labels (e.g.¬†G1 - G32), as well as total number of electrodes. When the groups are ready, click the blue Load Subject button to proceed. If there are any errors, a pop-up will appear indicating the error and a recommended fix (e.g.¬†‚Äúinvalid CT file. Please specify or upload your own.‚Äù) If there are no errors, a ‚Äúloading in progress‚Äù pop-up will appear indicating that the coregistered file and 3D viewer are being loaded. This process can take a few minutes. Once finished, the 3D viewer screen will automatically appear, with two panels: Localization Plan Details and Interactive 3D Viewer. Refer to the following screenshot for guidance: Notice that the right panel contains the 3D Viewer, which consists of the subject‚Äôs reconstructed brain model shown in black/white and their electrodes shown in green. Use the computer‚Äôs mousepad to zoom in and out of the model. Begin in the Localization Plan Details panel on the left, which displays the groups created on the previous screen. Begin by selecting a group to localize its electrodes. A table will appear with a row for each electrode in the group and columns specifying each electrode‚Äôs label, tkrRAS location, MNI152, and FSLabel. tkrRAS is a surface coordinate system used by FreeSurfer, where R orients toward the right direction, A orients toward the anterior direction, and S orients toward the superior direction. By default, these values will be set to 0,0,0. MNI152 is a volumetric coordinate system derived from averaging 152 individuals‚Äô MRI scans. By default, these values will be empty. (To learn more about these coordinate systems, visit the Q&amp;A at Electrode Localization.) FSLabel represents the anatomical location of the electrode. By default, these values will be empty. Now, click on the Show/Hide Localization Instructions button at the bottom of the panel to receive specific instructions on how to use the 3D viewer to localize the selected group‚Äôs electrodes. Generally speaking, steps will consist of: In the Electrode Localization settings on the 3D viewer, change Edit Mode from disabled to CT/Volume if the subject‚Äôs CT scan is available, or MRI slice if no CT is available. Double click on the green spot that represents the first electrode of the group. This will mark the spot with a yellow circle labeled ‚Äú1,‚Äù as well as automatically update the tkrRAS and MNI152 coordinate locations of this electrode in the table. Repeat this step for the last electrode of the group. In the Electrode Localization settings on the 3D viewer, change Interpolate Size to the total number of electrodes - 2. In the Electrode Localization settings on the 3D viewer, click Interpolate from Recently Added for RAVE to automatically localize the remaining electrodes in the group. Notice that these electrodes will be labeled on the 3D viewer with yellow circles and coordinate locations will automatically be filled in on the table. (To refine the electrode locations, set Edit Mode to ‚Äúrefine‚Äù and then press the Auto-Adjust All button. Alternatively, manually select a single electrode. It will turn red and the keyboard keys 1, 2, and 3 can then be used to move the electrode around.) Double-click on a row in the table to open a drop-down menu to set the FreeSurfer label of each electrode. RAVE can automatically select the anatomical region of the brain that the electrode is located in, or it can be selected manually. Note: each electrode‚Äôs MNI152 coordinates are hyperlinked to Neurosynth, a platform for fMRI data. The link contains data on past maps, studies, and associations that have been associated with the electrode‚Äôs coordinates. Use the blue Reset current group button above the table to completely reset the coordinate and label data in the table. Repeat the localization steps for each group. When finished, to see all of the subject‚Äôs electrodes in one table, click the Stage &amp; Show Electrode Table button in the bottom left corner of the screen. Click Save to Subject button to save this data for use in later RAVE sessions. Note: Adjust groups at any time (without losing electrode localization progress) by selecting the ‚ÄúLoad Data‚Äù button in the top menu bar. It may be helpful to adjust 3D viewer settings to more easily localize electrodes. There are various settings for the viewer that can be changed using the black box on the right side of the panel: Default Settings: Background color: change the background color of the viewer. Record (chrome-on): clicking here will start recording the 3D viewer and clicking again will stop the recording. A video in the .webm format will automatically download to the computer. This feature can be used to generate a video of the localization process. Screenshot: click here to take a screenshot of the current image in the 3D viewer. A .pdf file containing the image will automatically download to the computer. Reset: reset the brain model to its default position. Camera position: use the drop-down to change the view of the brain from the default free rotate (change orientation freely by dragging the cursor) to [lock] (preserve current orientation), right, left, anterior, posterior, superior, or inferior. Display coordinates: enabling this checkbox will display the tkRAS coordinate plane in the bottom left corner of the viewer. Volume Settings: These settings control aspects of the view of the 3D model and the CT overlay. Show Panels: Enable this checkbox to simultaneously display the coronal, axial, and sagittal views of the brain. For each viewer, click anywhere on the brain to automatically adjust the other viewers to visualize that position. Clicking the P button will lock the viewer so that clicking on the brain will not readjust the other viewers‚Äô positions. Note also that the + and - buttons can be used to zoom in and out of each viewer and the 0 button will reset the zoom back to default. Note that dragging the grey bar at the top of each view box can move the box elsewhere on the panel, and dragging the grey triangle at the bottom right corner will expand the box size. Reset Position: If the Show Panels checkbox is enabled, clicking this button will reset all three plane viewers (coronal, axial, and sagittal) to their default positions. Use Coronal, Axial, and Sagittal sliders to quickly adjust the positions of the planes on the main and individual viewers. Moving the coronal slider from left to right will move that plane from the posterior to anterior end of the brain, respectively. Moving the axial slider from left to right will move that plane from the inferior to superior end of the brain, respectively. Moving the sagittal slider will move that plane from the left to right end of the brain, respectively. For each slider, a coordinte can also be entered manually to set the plane position. By default, each slider is set to 0. Note that keyboard shortcuts are shown in grey next to each slider. Intersect MNI305: displays the coordinates in the MNI305 space where the coronal, axial, and sagittal planes intersect. Use the overlay coronal, axial, and sagittal checkboxes to control whether each plane is visible on the main 3D viewer. By default, these are checked to show all three planes. Dist. threshold: Use the Voxel Type: drop down menu to select which scan to overlay on the brain model in the 3D viewer. By default, this is set to CT indicating that the subject‚Äôs CT is overlaid in green. Use the Voxel Display: drop down menu to control whether or not the selected voxel type (i.e.¬†CT) is visible or hidden on the 3D viewer. By default, it will be set to visible (normal). Use the Voxel Opacity: slider to control the opacity of the voxel type selected, from 0 (transparent) to 1 (opaque). Note that a value can also be entered manually. By default, this is set to 1. Use the Voxel Min and Voxel Max sliders to adjust the threshold range for how much of the CT scan is visible on the 3D viewer. Setting this range is important to ensure clear viewing of the electrodes for easy localization. For example, reducing the minimum will display the skull on the 3D viewer. By default, the minimum is set to 3000 and the maximum is set to 3071 as these values provide a clear view of the electrodes with minimum interference from the rest of the CT image. Surface Settings: These settings control aspects of the 3D model of the subject‚Äôs cortical surface. Use the Subject: drop-down menu to easily switch between which subject‚Äôs 3D brain model is displayed in the 3D viewer. Surface Type: Use the Surface Material: drop down menu to select a material to visualize the subject‚Äôs cortical surface. The materials, MeshPhong (default) and MeshLambert, differ in how they display lighting of the 3D brain model. (See the Q&amp;A at Electrode Localization for more information on this difference.) Use the Left Hemisphere: and Right Hemisphere: drop-down menus to set the visualization of each hemisphere as normal (complete, solid representation of cortical surface), wireframe (simplified, skeletal representation of cortical surface using lines), or hidden (hemisphere not displayed). By default, each hemisphere is set to normal. Use the Left Opacity: and Right Opacity: sliders to control the opacity of each hemisphere, from 0 (hemisphere not displayed) to 1 (hemisphere fully-rendered). Note that a value can also be entered manually. By default, each slider is set to 1. Use the Surface Color: drop-down menu to control how the color of the 3D brain model is rendered. By default, this is set to vertices, but other options include sync from voxels (note that selecting this will open two sliders for the blend factor and sigma, set to 0.4 and 3 by default), sync from electrodes (note that in addition to blend factor and sigma, a decay slider will also be displayed, set to 0.15 by default), or none (no color rendering on model). (See the Q&amp;A at Electrode Localization for more information on the differences between these color-rendering methods.) Electrodes: The Map Electrodes: checkbox controls whether or not electrodes are mapped to the brain surface. By default, this is unchecked. If the box is checked, a surface mapping drop-down menu will appear to select the surface to map the electrodes to (options: std.141, mni305, or no mapping) and volume mapping to alternatively select the volume to display the electrodes in if surface mapping isn‚Äôt used (options: mni305 or no mapping). Use the Visibility: drop-down menu to control which localized electrodes are visible in the 3D viewer. The default setting is all visible, meaning all of a subject‚Äôs electrodes are shown on the viewer. Hide inactives will hide electrodes from groups that aren‚Äôt currently being worked on. Hidden will hide all electrodes. Electrode Localization: By default, the Edit mode drop-down menu is set to disabled. Change edit mode to CT/volume (have CT scan) or MRI Slice (no CT scan) when ready to localize electrodes. Use refine if electrodes have already been localized and small changes are just being made to placements. Note: When refine mode is selected, three new buttons will appear: Auto-Adjust All, which can be used to automatically adjust the coordinates for the electrodes in a group to better fit their positions on the 3D viewer. If certain electrodes in the group were selected in refine mode (shown in red), click Auto-Adjust highlighted to automatically re-adjust just the selected electrodes. Click Reset Highlighted to de-select all red electrodes in the group. Use the Electrode scale: slider to control the size of the yellow circles that represent localized electrodes. Use the Text scale slider to control the size of the numbers used to label each circle. Enable/Disable Electrodes: When hovering over or localizing an electrode in the 3D viewer, the tkrRAS, MNI305, and T1 RAS locations will automatically be shown in these fields. Use the Interpolate Size: field to quickly localize electrodes by inputting the total number of electrodes - 2 for the current group, if the first and last electrode in the group have already been localized. Then, press Interpolate from Recently Added to have RAVE automatically localize the remaining electrodes in the group. Use the Download as CSV: button to download a .csv file for the group whose electrodes are currently being localized. The file will contain coordinates and FsLabels for each electrode in the group, similar to the information shown in the table on Localization Plan Details panel. Data Visualization: Enable the Highlight Box checkbox to automatically add a red box around a currently selected electrode. This box can help with viewing an electrode against the brain surface, or for demonstrative purposes. Enable the Info Text checkbox to label the 3D viewer in the top-right corner with the subject ID, as well as the currently selected electrode‚Äôs label and MNI305 coordinates. This can be helpful for demonstrative purposes. Note: To view keyboard shortcuts for all of these settings, visit the RAVE Github repository When electrodes in every group have been localized, you are ready to proceed to further analysis modules! "],["generate-epoch.html", "5.6 Generate Epoch", " 5.6 Generate Epoch When the Generate Epoch module is first selected, a data selection window will appear. Simply select the project and subject whose data will be used. Once again, selecting ‚ÄúSync from [Import LFP] module‚Äù will automatically select the project and subject that was just imported. Click the blue ‚ÄúLoad Subject‚Äù button to proceed. Three panels will then appear on the screen: Load Epoch Channel and Transform &amp; Threshold on the left side, and Interactive Selector on the right side. Refer to the following screenshot for guidance. * Load Epoch Channel: ** Load existing epoch: ** Choose a block to generate epoch: ** File containing epoch channel: Then, click the blue ‚ÄúLoad Epoch File‚Äù button to proceed. The next two fields will specify the channel settings. ** Variable Name: ** Epoch Channel Sample Rate: Transform &amp; Threshold: ** Plot range: Two checkboxes: Difference Plot &amp; Absolute Plot ** Threshold direction: ** Minimum duration (s): Interactive Selector: ** Graphical Visualization: ** Threshold results: To download the staged table, click the blue link in the bottom right corner of the panel. Note that the file will be saved to the subject‚Äôs meta folder within the "],["qas.html", "Chapter 6 Q&amp;As", " Chapter 6 Q&amp;As This page contains possible questions that may arise when using RAVE and their answers. Questions are organized by section. "],["rave-installation.html", "6.1 RAVE Installation", " 6.1 RAVE Installation Question: When updating RAVE, I received a ‚Äútimeout of 60 seconds was reached‚Äù warning message. How do I fix this? Answer: Try switching to a faster network connection. Question: I already have R and RStudio downloaded. Can I skip the prerequisites? Answer: RAVE is dependent on the most recent versions of these applications, so please make sure they are properly updated. Be sure to also review the other pre-requisite steps, like installing Homebrew and the system libraries. The most common reason for issues in the installation of RAVE is failure to properly download these prerequisites. Question: How can I check my computer‚Äôs OS version or CPU type? Answer: If using a Mac, this can be found by clicking the apple logo at the top left of the screen, and then clicking ‚ÄúAbout this Mac‚Äù. The version and processor (CPU type) will be listed there. Question: I received a ‚Äúthe following directories are not writable by your user‚Äù error. How do I fix this? Answer: If there are multiple accounts on the computer but only one of them has homebrew installed, this error may result. To resolve it, change the ownership of the directories to the current user and make sure this user has write permission. "],["external-program-installation-dcm2niix-freesurfer-fslafni.html", "6.2 External Program Installation (dcm2niix, FreeSurfer, FSL/AFNI)", " 6.2 External Program Installation (dcm2niix, FreeSurfer, FSL/AFNI) Question: When trying to download these external softwares on MacOS, a ‚Äúcannot be opened because package is from unidentified developer‚Äù error message resulted. How do I allow the downloads? Answer: Please go to System Preferences &gt; Security &amp; Privacy &gt; General to give the computer permission to download the software. "],["getting-started-with-rave.html", "6.3 Getting Started with RAVE", " 6.3 Getting Started with RAVE Question: I copied a command into the RStudio console, but nothing is happening. What is the issue? Make sure to click the red stop sign at the top right of the console to stop the current command. This is necessary to execute a different command. "],["downloading-demo-data.html", "6.4 Downloading Demo Data", " 6.4 Downloading Demo Data Question: I received this message when trying to import a demo subject. /Users/aliavyanne/rave_data/raw_dir/YAI (NOT found) /Users/aliavyanne/rave_data/bids_dir//Test/sub-YAI (NOT found) How do I fix this? Answer: Download the demo subject before importing them. Use the following command to download the demo subject YAI: rave::download_sample_data(&quot;YAI&quot;) Question: Where does the demo data come from? Answer: The demo data available in RAVE is sourced from experiments run by the Beauchamp Lab at the Perelman School of Medicine, which investigates the neural mechanisms for multisensory integration and visual perception in human subjects. Read more at: https://www.med.upenn.edu/beauchamplab/ "],["importing-data.html", "6.5 Importing Data", " 6.5 Importing Data Question: What does the term ‚Äúchannel‚Äù refer to? Answer: In the early design of RAVE, we focused on exploring one channel per electrode cases, hence we equivalent ‚Äúchannel‚Äù to ‚Äúelectrode‚Äù here. Question: In step 3, why are the ‚Äúfolders‚Äù and ‚Äúelectrode‚Äù fields designated as ‚Äúread-only‚Äù? Answer: If these fields are designated as ‚Äúread only,‚Äù this means you have already imported the entered subject. To preserve reproducibility, once raw data for a subject is imported and notch filtered, the channel options can not be changed. Question: In step 3, what does the term ‚Äúblock‚Äù refer to? Answer: RAVE defines ‚Äúblock‚Äù as a period or session of continuous recording. A block should be named with a zero-padded integer according to the order they were recorded (e.g.¬†001 for the first session, 002 for the second). Question: On the import widgets panel at bottom right, I got a message that electrode files are missing. How do I resolve this? Answer: When selecting the ‚Äúcheck subject‚Äù button, the bottom right panel will indicate if any electrode files are missing based on the electrode numbers you entered in step three. Be sure to double check that the correct electrode numbers in step 3 were indicated. Question: Does RAVE automatically validate my data? Answer: Check for yourself to make sure that each block contains the appropriate files. RAVE will not automatically check this. Question: How do I know which file format to select in step 3? Answer: When you select a file format from the drop down, RAVE will display brief information on what that format entails and a sample organization for the data directory. Select the format that matches that of the data. Question: Where are my inputs and configurations stored for a given subject? Answer: This information is stored within data_dir/&lt;project&gt;/subject&gt;/rave/preprocess/rave.yaml of the home directory. "],["notch-filter.html", "6.6 Notch Filter", " 6.6 Notch Filter Question: What is fast fourier transform (FFT)? Answer: FFT is an algorithm that can quickly compute the discrete Fourier transform (DFT) of a signal. It transforms the signal from a function of time to the a fucntion of frequency by dividing the signal into its frequency components. Each component constitutes an oscillation with a unique amplitude. This procedure makes it easier to extract a base frequency and its harmonics (e.g.¬†of the amplifier) to perform the notch filter. Question: What is a Welch Periodogram? Answer: The Welch method allows for the estimation of the power of a signal at its component frequencies. The time signal is separated into individual blocks, a periodogram is created for each block, and then these periodograms are averaged to estimate the power. The Welch method reduces noise in the power estimation compared to other methods. (Note: a periodogram identifies the dominant frequencies in a time signal.) Question: How can I switch between subjects while on the notch filter or wavelet modules? Answer: In the bottom right corner of the screen, there is a rectangular button that lists the project and subject currently being analyzed ‚Äì e.g.¬†‚Äúdemo/YAD‚Äù. Click that button to go back to the load data screen and select a different project and/or subject. Question: I‚Äôve already performed the notch filter, but RAVE is not letting me update my channel options. How can I fix this? Answer: Once the data is imported and notch filtered, you cannot change the channel options. You should make a new project to change the channel options in this case. Question: This error popped up when I tried loading a subject into the notch filter module. What do I do? ‚ÄúFound an error while loading the power data: The subject exists but its signal has not been imported yet.‚Äù Answer: Use the menu at left to go back to the ‚Äúimport signals‚Äù module. It is necessary to import that subject using the ‚Äúvalidate &amp; import‚Äù button. "],["wavelet.html", "6.7 Wavelet", " 6.7 Wavelet Question: What does wavelet transformation actually entail? Answer: A complex wavelet will undergo convulotion with the iEEG signal. The iEEG signal will then be translated across the time axis, using either high frequency or low frequency wavelets. The result is good frequency resolution but poor temporal resolution at low frequencies, and good temporal resolution and poor frequency resolution at high frequencies. Note that a wavelet is created by multiplying a Gaussian function with a sine function. See more: https://sapienlabs.org/lab-talk/time-frequency-analysis-and-wavelets/v Question: Why can‚Äôt I down-sample the wavelet coefficients to a sample rate less than or equal to 1? Question: How is the power sample rate different from the rate used in the iEEG recording setup? Answer: The recording rate is associated with raw voltage data, whereas the power sample rate is associated with time frequency decomposition. "],["reconstruction-coregistration-1.html", "6.8 Reconstruction &amp; Coregistration", " 6.8 Reconstruction &amp; Coregistration Question: What is the command-line? Answer: The computer‚Äôs command-line is an interface that allows the user to run programs, add/delete files, and use other text-based commands. In the context of surface &amp; registration, RAVE relies on the command-line to run dcm2niix (converts DICOM files to Nifti format), FreeSurfer (allows for the reconstruction of the cortical surface), and FSL home (aligns/overlays the CT image with the MRI data). Question: When I press ‚ÄúCheck data &amp; command-line tools,‚Äù I recieve the following warning: ‚ÄúFound existing FreeSurfer reconstructed directory. recon-all will ignore the imported T1 images.‚Äù How do I resolve it? Answer: By default, FreeSurfer will continue working on the existing directory. To start from scratch, please manually remove the directory. The warning message will indicate where the directory is located; it will be labeled ‚Äúfs‚Äù. E.g. /Users/beauchamplab/rave_data/raw_dir/YCQ/rave-imaging/fs Question: When RAVE tries to run the FreeSurfer commands, I recieve the following error in my command-line interface: ERROR: FreeSurfer license file /Applications/freesurfer/7.3.0/.license not found. How do I fix it? Answer: A free license file is required to use FreeSurfer. Please refer to the instructions in the installation guide on how to obtain this file and place it in the appropriate place in the file directory: Install External Programs. "],["electrode-localization-1.html", "6.9 Electrode Localization", " 6.9 Electrode Localization Question: What is the difference between MeshPhongMaterial and MashLambertMaterial? Answer: MeshPhong and MeshLambert are illumination models used in 3D rendering. MeshPhong computes the lighting of the cortical surface from each pixel, whereas MeshLambert derives the lighting of the brain model from its vertices. Question: The brain model shown in the viewer only shows the three planes and not the fully-rendered cortical surface. How do I fix this? Answer: To see the full cortical surface on the brain model, it is necessary to use the -all flag during the FreeSurfer reconstruction in the Reconstruction &amp; Coregistration module. Please return to this module to re-run the reconstruction. Note that the -all flag can take 20 hours to process, so it is recommended to run overnight. "]]
