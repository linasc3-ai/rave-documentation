[["index.html", "RAVE Documentation Chapter 1 About 1.1 Contact Us 1.2 Citations", " RAVE Documentation 2022-06-17 Chapter 1 About R Analysis and Visualization of intracranial EEG (RAVE) is free and open-source software for the analysis of intracranial electroencephalogram (iEEG) data, including data collected using strips and grids (electrocorticography, ECoG) and depth electrodes (stereotactic EEG). 1.1 Contact Us Questions? Email us at help@rave.wiki. 1.2 Citations RAVE has been developed since 2017 with funding provided by NIH-1R24MH117529. If you use RAVE, please cite: Magnotti, John F, Zhengjia Wang, and Michael S Beauchamp. 2020. “RAVE: Comprehensive Open-Source Software for Reproducible Analysis and Visualization of Intracranial EEG Data.” NeuroImage 223: 117341. Other papers published using RAVE: Karas, Patrick J, John F Magnotti, Brian A Metzger, Lin L Zhu, Kristen B Smith, Daniel Yoshor, and Michael S Beauchamp. 2019. “The Visual Speech Head Start Improves Perception and Reduces Superior Temporal Cortex Responses to Auditory Speech.” Elife 8: e48116. Metzger, Brian A, John F Magnotti, Zhengjia Wang, Elizabeth Nesbitt, Patrick J Karas, Daniel Yoshor, and Michael S Beauchamp. 2020. “Responses to Visual Speech in Human Posterior Superior Temporal Gyrus Examined with iEEG Deconvolution.” Journal of Neuroscience 40 (36): 6938–48. Wang, Zhengjia, Magnotti, John, Beauchamp, Michael S., and Li, Meng. 2022 “Functional group bridge for simultaneous regression and support estimation.” Biometrics, 00, 1– 13. "],["installation-guide.html", "Chapter 2 Installation Guide 2.1 Install the Prerequisites 2.2 Install RAVE 2.3 Updating RAVE after download", " Chapter 2 Installation Guide Installing RAVE involves two parts: 1). installing the pre-requisites 2). downloading RAVE Carefully follow the steps below to install RAVE: Note: For optimal use of RAVE, it is recommended your computer has at least 64GB RAM and a 4-core CPU. 2.1 Install the Prerequisites Because RAVE is written in the programming language “R”, it is necessary to download R and its integrated development editor “RStudio” onto your computer. Correctly installing the following pre-requisites is necessary for RAVE to work properly. Note: RAVE requires the latest versions of R and RStudio to run properly. To avoid errors in the download process, if you already have R and RStudio on your computer, be sure they are updated to the most recent versions. 2.1.1 MacOS 2.1.1.1 Install Homebrew Homebrew is a package manager that adds functions missing from the Apple operating system. It can be installed by copying and pasting the following line into your terminal (note: the terminal can be found through searching the applications folder on your computer): /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; If you have not downloaded Homebrew to your computer before, you will be prompted with the following questions: ==&gt; Checking for `sudo` access (which may request your password)... Password: Enter your user password. Note that the password won’t be displayed into the screen as you type for security reasons. Once you’ve finish typing, press the RETURN or ENTER key to proceed. ==&gt; This script will install: ... Press RETURN/ENTER to continue or any other key to abort: Please press the RETURN or ENTER key to continue. Add brew to path The terminal commands used to add homebrew to the path depend on your computer’s CPU chip. Copy and paste the appropriate command lines into the terminal based on your computer’s chip type. For M1 Chips echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile For Intel Chips 2.1.1.2 Install R Language Download and install the latest version of R directly from the website: https://cran.r-project.org/bin/macosx/ Be sure to download the package that corresponds to your computer’s OS version and CPU type. For Intel Macs, download R-X.X.X.pkg For M1 Macs, download R-X.X.X-arm64.pkg 2.1.1.3 Install RStudio Desktop Download and install RStudio Desktop directly from the website: https://www.rstudio.com/products/rstudio/download/ Be sure to download the version that corresponds to your OS system. Refer to the following screenshot for guidance. Screenshot of RStudio Website 2.1.1.4 Install system libraries You will need to download the libraries hdf5, fftw, and pkg-config. This can be done by copying and pasting the following line into your terminal: brew install hdf5 fftw pkg-config 2.1.1.5 Troubleshooting Possible errors and their recommended fixes: If you have multiple accounts on your computer but only one of them has homebrew installed, you may receive a “the following directories are not writable by your user” error. To resolve this error, you can change the ownership of the directories to the current user and make sure this user has write permission. When executing step 2.1.1.4 (installing hdf5, fftw, and pkg-config), if you receive the error “No available formula with the name”hdf5\"., there might bee an issue with the location of Homebrew. Try the following commands in your terminal: rm -rf &quot;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core&quot; and then brew tap homebrew/core 2.2 Install RAVE Now that you have installed the pre-requisites, follow the steps below to download and install the RAVE package on your computer. 2.2.1 Download and Configure Open the RStudio application and click on the Console tab (if RStudio is set to default settings, this tab is usually located in bottom left panel of your screen). Copy and paste the following command onto the console to download the RAVE packages from the online repository and install them on your computer: options(repos = c(ropensci = &#39;https://beauchamplab.r-universe.dev&#39;, CRAN = &#39;https://cloud.r-project.org&#39;)) install.packages(c(&#39;rave&#39;, &#39;ravebuiltins&#39;)) Copy and paste the following command onto the console to update RAVE to the latest available version (this will account for recent bug fixes and newly added features): rave::check_dependencies(nightly = TRUE) Copy and paste the following command onto the console to: * Download template brain (N27, fsaverage) for electrode template mapping * Download demo subject data for single- and group-level analyses rave::finalize_installation(upgrade = &#39;ask&#39;) 2.2.1.1 Troubleshooting When updating RAVE, if you receive a “timeout of 60 seconds was reached” warning message, try switching to a faster network connection. 2.2.2 Validate the Installation To check whether RAVE was properly installed, copy and paste the following commands onto the console to start the program: rave::start_rave() If installation was successful, a new web browser window should automatically open with the RAVE display. A screenshot is shown below: RAVE Start Screen You have successfully downloaded RAVE! 2.2.2.1 Troubleshooting ** The RAVE data should be located [default location]. If located elsewhere on the window, copy and paste the following command onto the console to set the data directory to the correct location: rave::rave_options() 2.3 Updating RAVE after download If you’ve already downloaded RAVE and simply wish to update the application to the most recent version, copy and paste the following command into the RStudio console: rave::check_dependencies(nightly = TRUE) Note: When re-updating, a pop-up might appear in RStudio asking if you want to reinstall the N27 template brain. Because the template is already installed, click no. What’s Next Now that you’ve completed installation, visit the following pages to start using RAVE! Starting RAVE Change RAVE settings "],["get-started.html", "Chapter 3 Get Started 3.1 Starting RAVE 3.2 Closing RAVE 3.3 Change RAVE Settings", " Chapter 3 Get Started Now that you’ve successfully installed RAVE, review the following instructions to get started using it. 3.1 Starting RAVE Note: you must quit and restart RStudio if you have just downloaded or updated RAVE in order for the application to start successfully. After restarting RStudio, copy and paste the following command into the RStudio console to open RAVE: rave::start_rave() RAVE will display in a new web browser (Google Chrome is recommended for optimal use). 3.2 Closing RAVE To completely close the RAVE server: 1). Click the red stop sign in the bottom left panel of RStudio (refer to the screenshot below to find the stop sign). Screenshot of RStudio console stop sign 2). Quit the RStudio application. If asked whether you want to Save workspace image?, click no. Note: Closing the RAVE display tab on your web browser will only close the display, not the actual RAVE server. 3.3 Change RAVE Settings To access and change RAVE settings, copy and paste the following command into the RStudio console: rave::rave_options() Modules: Summary of all RAVE modules Core Settings: Allows you to change where RAVE data is stored. System: Allows you to change RAM and number of CPU cores RAVE can use to alter speed at which data is read 3D Viewer: Allows you to change which downloaded brain data to use as the template brain for electrode template mapping; the default template brain is N27. Note: In general, you must stop processes that are currently being executed by the console before trying to initiate another command. To do this, click the red stop sign on the bottom left panel of RStudio. For example, if you have just opened RAVE and wish to update the application, click the red stop sign. Refer to the following screenshot for guidance. "],["import-data.html", "Chapter 4 Import Data 4.1 Downloading demo data 4.2 Importing demo data 4.3 Importing Your Own Data", " Chapter 4 Import Data Now that you have installed and gotten started with RAVE, you can proceed to importing your iEEG data into the software so that it can be preprocessed and used in future modules. 4.1 Downloading demo data Before importing your own data, you may wish to gain familiarity by trying RAVE’s demo data in various modules. By default, RAVE already has a DemoSubject whose raw data has already been imported. However, you can also download other demo subjects by copying and pasting the following command into the RStudio console: rave::download_sample_data(&quot;subject_code&quot;) You will need to substitute “subject_code” with one of the available demo subjects: KC, YAB, YAD, YAF, YAH, YAI, YAJ, and YAK. For example, to download subject YAB, use the following command: rave::download_sample_data(&quot;YAB&quot;) Note that downloaded demo data will be stored in the raw_dir folder of the rave_data folder in your home directory. Within raw_dir, each subject’s data is stored in its own folder (e.g. YAB’s data will be stored in the YAB folder in raw_dir). Refer to the following screenshot for clarity. Screenshot of location of downloaded demo data You can proceed to the “importing demo data” instructions to load your newly downloaded raw data into RAVE for cleaning. 4.2 Importing demo data You will need to launch the RAVE preprocessing module. Copy and paste the following command into the RStudio console: rave::rave_preprocess() The Preprocessing module will then open in a browser window, allowing you to see the Overview page. The Overview page is where you will import or load your data into RAVE. It consists of three panels. * Overview: this is where you will specify your inputs and configurations. * Information: a summary of your inputs and configurations is shown here. * Import Widgets Proceed to the overview panel to specify these inputs and configurations. 4.2.1 Step 1: Select Subject Enter the code for the demo subject whose iEEG data you want to import into RAVE. Note that a subject’s data should be stored in its own folder within the raw directory (raw_dir folder) within therave_data folder. E.g. if you want to select demo subject KC, enter “KC” and you should receive the following message letting you know the subject has been found: /Users/your_home_directory/rave_data/raw_dir/KC (found!) 4.2.2 Step 2: Select Project or Create New One This step allows you to specify where you want the cleaned data to be stored. If you wish to create a new project, select “New Project” from the drop down menu and indicate your desired project name. Note that by default, this project folder will be created within the data directory (data_dir) within rave_data, with a new folder for the subject. E.g. if you wish to store demo subject KC in a new project called “Test”, you should receive the following message: Subject [Test/KC] will be stored at: /Users/your_home_directory/rave_data/data_dir/Test/KC Then, click “create subject” to proceed. 4.2.3 Step 3: Validate Data In this step, you will have to specify your desired electrode (aka channel) options: Folders: Each folder corresponds to a block, aka a period or session of continuous electrode recording. Select the blocks that correspond to the trials you want to analyze. (E.g. for KC, you could select blocks 003 and 004.) Electrodes: Indicate the electrodes you want to analyze. Note that it is reccomended that you run the preprocessing steps on all electrodes at once. (E.g. for KC, you should indicate 1-92.) Sample Rate: Indicate the sample rate of your iEEG recording equipment; this value will determine the rate at which the preprocessing will be run. For demo subjects, you can indicate 2000. Physical Unit: Indicate the units you wish to use to measure voltage. Demo data can be kept at the default as-is (no change) option. File Format: RAVE currently supports six file formats for your iEEG data. Demo data is stored using .mat/.h5 files, in which one file represents one electrode in a given block. (For guidance when selecting a file format, RAVE will briefly describe the format and display a sample organization of the directory.) Click the Check Subject button to proceed. (Note: this process can take a few minutes; progress will be displayed via pop-ups in the bottom right.) Click the Start Import button to proceed. (Note: this process can take a few minutes.) You have successfully imported a demo subject into RAVE. You can proceed to the preprocessing modules for further cleaning of this data. The following screenshot summarizes the data loading process: 4.3 Importing Your Own Data If you’re ready to start using RAVE with your own data, follow the steps below to import the data so that it can be preprocessed and used in future modules. 4.3.1 Organizing Your Directories rave::archive_subject "],["preprocessing.html", "Chapter 5 Preprocessing 5.1 Step #1: Notch Filter 5.2 Step #2: Wavelet 5.3 Step #3: Localization", " Chapter 5 Preprocessing 5.1 Step #1: Notch Filter 5.2 Step #2: Wavelet 5.3 Step #3: Localization "],["qas.html", "Chapter 6 Q&amp;As 6.1 Installation 6.2 Getting Started with RAVE 6.3 Downloading Demo Data 6.4 Importing Data", " Chapter 6 Q&amp;As This page contains possible questions that may arise when using RAVE and their answers. Questions are organized by section. 6.1 Installation Question: When updating RAVE, I received a “timeout of 60 seconds was reached” warning message. How do I fix this? &gt; Answer: Try switching to a faster network connection. Question: I already have R and RStudio downloaded. Can I skip the prerequisites? &gt; Answer: RAVE is dependent on the most recent versions of these applications, so please make sure they are properly updated. Be sure to also review the other pre-requisite steps, like installing Homebrew and the system libraries. The most common reason for issues in the installation of RAVE is failure to properly download these prerequisites. Question: How can I check my computer’s OS version or CPU type? &gt; Answer: If you’re using a Mac, this can be found by clicking the apple logo at the top left of your screen, and then clicking “About this Mac”. The version and processor (CPU type) will be listed there. Question: I received a “the following directories are not writable by your user” error. How do I fix this? &gt; Answer: If you have multiple accounts on your computer but only one of them has homebrew installed, you may receive that error. To resolve it, you can change the ownership of the directories to the current user and make sure this user has write permission. 6.2 Getting Started with RAVE Question: I copied a command into the RStudio console, but nothing is happening. What is the issue? &gt; Make sure you click the red stop sign at the top right of the console to stop the current command. This is necessary if you want to execute a different command. 6.3 Downloading Demo Data Question: I received this message when trying to import a demo subject. /Users/aliavyanne/rave_data/raw_dir/YAI (NOT found) /Users/aliavyanne/rave_data/bids_dir//Test/sub-YAI (NOT found) How do I fix this? Answer: You forgot to download this demo subject before importing them. You can use the following command to download the demo subject YAI: rave::download_sample_data(&quot;YAI&quot;) Question: Where does the demo data come from? &gt; Answer: The demo data available in RAVE is sourced from experiments run by the Beauchamp Lab at the Perelman School of Medicine, which investigates the neural mechanisms for multisensory integration and visual perception in human subjects. Read more at: https://www.med.upenn.edu/beauchamplab/ 6.4 Importing Data Question: What does the term “channel” refer to? &gt; Answer: In the early design of RAVE, we focused on exploring one channel per electrode cases, hence we equivalent “channel” to “electrode” here. Question: In step 3, why are the “folders” and “electrode” fields designated as “read-only”? Answer: If these fields are designated as “read only,” this means you have already imported the entered subject. To preserve reproducibility, once raw data for a subject is imported and notch filtered, you can not change the channel options. Question: In step 3, what does the term “block” refer to? Answer: RAVE defines “block” as a period or session of continuous recording. A block should be named with a zero-padded integer according to the order they were recorded (e.g. 001 for the first session, 002 for the second). Question: On the import widgets panel at bottom right, I got a message that electrode files are missing. How do I resolve this? Answer: When you hit the “check subject” button, the bottom right panel will let you know if any electrode files are missing based on the electrode numbers you entered in step three. Be sure to double check that you indicated the correct electrode numbers in step 3. Question: Does RAVE automatically validate my data? &gt; Answer: You should check for yourself to make sure that each block contains the appropriate files. RAVE will not automatically check this for you. Question: How do I know which file format to select in step 3? &gt; Answer: When you select a file format from the drop down, RAVE will display brief information on what that format entails and a sample organization for the data directory. Select the format that matches that of your data. Question: Where are my inputs and configurations stored for a given subject? &gt; Answer: This information is stored within data_dir/&lt;project&gt;/subject&gt;/rave/preprocess/rave.yaml of your home directory. Question: I’ve already performed the notch filter, but RAVE is not letting me update my channel options. How can I fix this? &gt; Answer: Once the data is imported and notch filtered, you cannot change the channel options. You should make a new project to change the channel options in this case. "]]
