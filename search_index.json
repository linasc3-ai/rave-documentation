[["index.html", "RAVE Documentation Chapter 1 Introduction", " RAVE Documentation 2022-07-28 Chapter 1 Introduction The above video provides a brief introduction of what RAVE is, including key features and benefits. R Analysis and Visualization of intracranial EEG (RAVE) is free and open-source software for the analysis of intracranial electroencephalogram (iEEG) data, including data collected using strips and grids (electrocorticography, ECoG) and depth electrodes (stereotactic EEG). RAVE official wiki https://rave.wiki Contact us: help@rave.wiki What‚Äôs NEW! Citation: RAVE has been developed since 2017 with funding provided by NIH-1R24MH117529. If you use RAVE, please cite: Magnotti, J. F., Wang, Z., &amp; Beauchamp, M. S. (2020). RAVE: Comprehensive open-source software for reproducible analysis and visualization of intracranial EEG data. NeuroImage, 223, 117341. [DOI] "],["showcases.html", "Showcases", " Showcases Conference posters: 2022 NIH BRAIN Initiative Selected journal paper using RAVE: Wang, Z., Magnotti, J., Beauchamp, M.S. and Li, M. (2022) Functional group bridge for simultaneous regression and support estimation. Biometrics, 00, 1‚Äì 13. [DOI] Adkinson, J.A., Tsolaki, E., Sheth, S.A., Metzger, B.A., Robinson M.E., Oswalt, D., McIntyre, C.C., Mathura, R.K., Waters, A.C., Allawala, A.B., Noecker, A.M. (2022) Imaging versus electrographic connectivity in human mood-related fronto-temporal networks. Brain Stimulation, 15(3), 554-65. [DOI] Metzger, B,A., Magnotti, J.F., Wang, Z., Nesbitt, E., Karas, P.J., Yoshor, D., Beauchamp, M.S. (2020) Responses to visual speech in human posterior superior temporal gyrus examined with iEEG deconvolution. Journal of Neuroscience, 40(36), 6938-48. [DOI] Geyer, K., Campbell, F., Chang, A., Magnotti, J.F., Beauchamp, M.S., Allen, G.I. (2020) Interpretable visualization and higher-order dimension reduction for ECoG data. 2020 IEEE International Conference on Big Data (Big Data), pp.¬†2664-2673. [DOI] Metzger, B.A., Kalva, P., Mocchi, M.M., Cui, B., Adkinson, J.A., Wang, Z., Mathura, R., Gavvala, J., Krishnan, V., Lin, L., Maheshwari, A. (2022) Intracranial EEG spectral feature analysis and focal brain stimulation reveal affective specialization within dorsal anterior cingulate cortex. bioRxiv. [DOI] Karas, P.J., Magnotti, J.F., Metzger, B.A., Zhu, L.L., Smith, K.B., Yoshor, D., Beauchamp, M.S. (2019) The visual speech head start improves perception and reduces superior temporal cortex responses to auditory speech. Elife, 8;8:e48116. [DOI] "],["installation-guide.html", "Chapter 2 Installation Guide", " Chapter 2 Installation Guide RAVE is written as an ‚ÄúR‚Äù package. To properly install RAVE, please carefully follow the instructions step-by-step. We found 90% installation issues are due to not following the instructions (for example, system prerequisites). Hardware Requirements Minimal requirement: 4 CPU cores with 8 GB RAM Recommended: 8+ CPU with 32+ GB RAM System Library Prerequisites MacOS Windows Debian Linux (Ubuntu) "],["system-prerequisites.html", "2.1 System Prerequisites", " 2.1 System Prerequisites RAVE is written in the programming language ‚ÄúR‚Äù, so it is necessary to download the latest version of R on the computer. It is strongly recommended to install ‚ÄúRStudio‚Äù, an integrated development environment, in order to easily utilize RAVE features. This section will guide the installation of these and other prerequisites. Please click on the following links according to your operating systems. MacOS Windows Debian Linux (Ubuntu) 2.1.1 MacOS [STEP 1: Install Homebrew] (Note: if you have downloaded Homebrew in the past, please skip Step 1 and 2 and jump to the Step 3.) Homebrew is a package manager that adds system libraries missing from the Apple operating system. It can be installed by copying and pasting the following line into the terminal (note: the terminal can be found through searching the applications folder on the computer): /bin/bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot; If this is the first time installing Homebrew, the following questions might be prompted: ==&gt; Checking for `sudo` access (which may request your password)... Password: Enter your user‚Äôs password (the password won‚Äôt be displayed into the screen as you type for security reasons). Once finished, press the RETURN or ENTER key to proceed. ==&gt; This script will install: ... Press RETURN/ENTER to continue or any other key to abort: Please press the RETURN or ENTER key to continue. [STEP 2: Add command ‚Äúbrew‚Äù to system search path] The terminal commands used to add homebrew to the path depend on your computer‚Äôs CPU chip. Copy and paste the appropriate command lines into the terminal based on your computer‚Äôs chip type. If you don‚Äôt know the CPU type, click the Ô£ø icon on the top-right, and choose About This Mac. For M1 Chips echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/opt/homebrew/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile For Intel Chips echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.zprofile echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.profile echo &#39;eval &quot;$(/usr/local/bin/brew shellenv)&quot;&#39; &gt;&gt; ~/.bash_profile [STEP 3: Use brew to install missing libraries] Open the system terminal, paste the following line and press return key: brew install hdf5 fftw pkg-config This command installs the following three libraries: hdf5: Shared library to access the universal HDF5 file format fftw: Fast-Fourier transform library required by signal processing code pkg-config: Package configuration helpers allowing R to find the two libraries above [STEP 4: Install R] Download and install the latest version of R directly from the website: https://cran.r-project.org/bin/macosx/ Be sure to download the package that corresponds to the computer‚Äôs OS version and CPU type. If R has been installed, we highly recommend updating to the latest version. For Intel Macs, the R installer name should look like R-X.X.X.pkg For M1 Macs, the R installer name should look like R-X.X.X-arm64.pkg [STEP 5: Install RStudio Desktop] Download and install RStudio Desktop directly from the website: https://www.rstudio.com/products/rstudio/download/ Be sure to download the version that corresponds to the OS system. If RStudio is already downloaded, simply ensure it is updated to the latest version. Refer to the following screenshot for guidance. Screenshot of RStudio download site "],["install-rave.html", "2.2 Install RAVE", " 2.2 Install RAVE Important: Before proceeding to rest of this section. Please make sure you have read and finished the previous section: ‚ÄúSystem prerequisites‚Äù. Step #1: Download and Configure Open the RStudio application and click on the Console tab. If RStudio adopts the default settings, this tab should be located in bottom-left. Important: Please do NOT mix an R command with a shell command. When running R command, please open RStudio and use the Console tab to run. If you direct copy the R scripts into system shell terminals, the script will fail! Copy and paste the following R command into the RStudio console to install RAVE and its dependencies from online repositories: options(repos = c(ropensci = &#39;https://beauchamplab.r-universe.dev&#39;, CRAN = &#39;https://cloud.r-project.org&#39;)) install.packages(c(&#39;rave&#39;, &#39;ravebuiltins&#39;, &#39;ravedash&#39;)) Copy and paste the following command into the RStudio console to update RAVE to the latest version (with bug fixes and new features): rave::check_dependencies(nightly = TRUE) Execute the following R command to download extra data and templates: rave::finalize_installation(upgrade = &#39;always&#39;) This finalizing step will download the following additional parts: Template brain: (N27, fsaverage) for group-level electrode template mapping Demo subject data: for demonstration purposes Built-in modules and pipelines Step #2: Validate the Installation To check whether RAVE has been properly installed, execute the following R command to start the program. rave::start_rave() If installation was successful, a new web browser window should automatically open with the RAVE display. A screenshot is shown below: RAVE Start Screen üéâ You have successfully downloaded RAVE! Now that installation was completed, visit the following pages to start using RAVE! Starting RAVE Upgrade RAVE Change RAVE settings "],["download-demo-data.html", "2.3 Download demo data", " 2.3 Download demo data Before importing lab data, to gain familiarity it is recommended to try RAVE‚Äôs demo data in various modules. By default, RAVE already has a DemoSubject whose raw data has already been imported. However, you can also download other demo subjects by copying and pasting the following command into the RStudio console: rave::download_sample_data(&quot;subject_code&quot;) Substitute ‚Äúsubject_code‚Äù with one of the available demo subjects: KC, YAB, YAD, YAF, YAH, YAI, YAJ, and YAK. For example, to download subject YAB, use the following command: rave::download_sample_data(&quot;YAB&quot;) Note that downloaded demo data will be stored in the raw_dir folder of the rave_data folder in your home directory. Within raw_dir, each subject‚Äôs data is stored in its own folder (e.g.¬†YAB‚Äôs data will be stored in the YAB folder in raw_dir). Refer to the following screenshot for clarity. Screenshot of location of downloaded demo data Proceed to the ‚Äúimporting demo data‚Äù instructions to load your newly downloaded raw data into RAVE for cleaning. "],["upgrade-rave.html", "2.4 Upgrade RAVE", " 2.4 Upgrade RAVE RAVE is actively under development with new features and bug fixes. To enjoy the new features, RAVE has built-in function that allows to update itself directly from the following R command: rave::check_dependencies(nightly = TRUE) When upgrading RAVE in RStudio, a pop-up dialogue might appear asking if you want to re-install the N27 template brain or pipeline modules. Simply choose ‚Äúyes‚Äù. Please make sure you have access to the internet when upgrading. "],["troubleshooting.html", "2.5 Troubleshooting", " 2.5 Troubleshooting Possible errors during installation and their solutions: Error: ‚ÄúCan‚Äôt update lock in /usr/local/var/homebrew/locks‚Äù. Error: ‚ÄúNo available formula with the name ‚Äù. This error could occur if thee computer has multiple accounts, and the current active account does not have the right to manage brew libraries. Please login with account that has the privilege to manage HomeBrew and use that account to install. Error: ‚ÄúNo available formula with the name ‚Äù. There might be an issue with your Homebrew: it cannot find proper formula (recipe needed to brew libraries). Please try reseting the brew repository by: rm -rf &quot;/usr/local/Homebrew/Library/Taps/homebrew/homebrew-core&quot; brew tap homebrew/core "],["get-started.html", "Chapter 3 Get Started", " Chapter 3 Get Started Now that RAVE has successfully been installed, review the following instructions to get started using it. "],["overview-of-rave-structure.html", "3.1 Overview of RAVE Structure", " 3.1 Overview of RAVE Structure Main Application The main application allows for the analysis of cleaned iEEG data. Access it by copying and pasting the following command into the RStudio console: rave::start_rave() Sample screenshot of RAVE main application Preprocess The preprocess application allows for the importing of iEEG data into RAVE and preparing it for analysis in future modules. Access it by copying and pasting the following command into the RStudio console: rave::rave_preprocess() It includes four sections: * Overview: * Notch Filter: * Wavelet: * Localization Screenshot of RAVE preprocess Options The options application allows for the editing of RAVE settings. To access options, copy and paste the following command into the RStudio console: rave::rave_options() Modules: Summary of all RAVE modules Core Settings: change where RAVE data is stored. System: change RAM and number of CPU cores RAVE can use to alter speed at which data is read 3D Viewer: change which downloaded brain data to use as the template brain for electrode template mapping; the default template brain is N27. Screenshot of RAVE options "],["starting-and-closing-rave.html", "3.2 Starting and Closing RAVE", " 3.2 Starting and Closing RAVE Starting RAVE Note: it is necessary to quit and restart RStudio if RAVE has just been downloaded or updated, in order for the application to start successfully. After restarting RStudio, copy and paste the following command into the RStudio console to open RAVE: rave::start_rave() RAVE will display in a new web browser (Google Chrome is recommended for optimal use). Closing RAVE To completely close the RAVE server: 1). Click the red stop sign in the bottom left panel of RStudio (refer to the screenshot below to find the stop sign). Screenshot of RStudio console stop sign 2). Quit the RStudio application. If asked whether to Save workspace image?, click no. Note: Closing the RAVE display tab on the web browser will only close the display, not the actual RAVE server. Note: In general, it is necessary to stop processes that are currently being executed by the console before trying to initiate another command. To do this, click the red stop sign on the bottom left panel of RStudio. For example, if RAVE has just been opened and one wants to open the preprocessing application next, click the red stop sign first. "],["get-data-into-rave.html", "Chapter 4 Get Data into RAVE", " Chapter 4 Get Data into RAVE Now that you have installed and gotten started with RAVE, you can proceed to importing your iEEG data into the software so that it can be preprocessed and used in future modules. It is non-trivial to import data into RAVE. Luckily, RAVE supports multiple universal file conventions such as HDF5, EDF(+), BrainVision, and Matlab data formats. With more and more data formats supported, RAVE will become less dependent on 3rd-party softwares. This chapter will guide you through the following topics: File hierarchy and specification Overview: Voltage data Import Matlab/HDF5 file per electrode per block Import One Matlab/HDF5 file per session block Import Single EDF(+) file per block Import Single BrainVision file per block Overview: Neuro-Imaging data Import MR imaging data Import FreeSurfer data Import CT data "],["file-hierarchy-and-specification.html", "4.1 File hierarchy and specification", " 4.1 File hierarchy and specification There are two major data folders in RAVE. One contains the raw, unprocessed data such as analog traces, MRI/CT scans. The other stores processed data which is self-contained and portable. Both data folders are located at your home directory. To get the locations of these two folders, please launch a blank RAVE session: rave::start_session() TODO: Add a figure with captions showing where to find these settings TODO Also add a walk-through to each folders This next section focuses on how to organize the raw data folder. The goal is to import the electrophysiological data into RAVE. "],["overview-voltage-data.html", "4.2 Overview: Voltage data", " 4.2 Overview: Voltage data RAVE supports various of data formats such as HDF5, EDF(+), BrainVision, and Matlab, etc‚Ä¶ Before discussing about these data formats, let‚Äôs start from the general workflow with the demo data that has already been installed. (If you haven‚Äôt downloaded demo data, please see here for detailed instructions) Let‚Äôs launch a blank RAVE session: rave::start_session() In the sidebar, open Import Signals &gt; Native Structure ‚Ä¶.. 4.2.1 Format 1 "],["importing-demo-data.html", "4.3 Importing demo data", " 4.3 Importing demo data Launch the RAVE preprocessing module by copy and paste the following command into the RStudio console: rave::rave_preprocess() The Preprocessing module will then open in a browser window, allowing you to see the Overview page. The Overview page is where you will import or load your data into RAVE. It consists of three panels. * Overview: this is where inputs and configurations will be specified * Information: a summary of the inputs and configurations is shown here. * Import Widgets Proceed to the overview panel to specify these inputs and configurations. 4.3.1 Step 1: Select Subject Enter the code for the demo subject whose iEEG data to import into RAVE. Note that a subject‚Äôs data should be stored in its own folder within the raw directory (raw_dir folder) within therave_data folder. E.g. to select demo subject KC, enter ‚ÄúKC‚Äù and the following message should result, indicating the subject has been found: /Users/your_home_directory/rave_data/raw_dir/KC (found!) 4.3.2 Step 2: Select Project or Create New One This step allows for the specification of where to storee the cleaned data. To create a new project, select ‚ÄúNew Project‚Äù from the drop down menu and indicate the desired project name. Note that by default, this project folder will be created within the data directory (data_dir) within rave_data, with a new folder for the subject. E.g. to store demo subject KC in a new project called ‚ÄúTest‚Äù, the following message should result: Subject [Test/KC] will be stored at: /Users/your_home_directory/rave_data/data_dir/Test/KC Then, click ‚Äúcreate subject‚Äù to proceed. 4.3.3 Step 3: Validate Data In this step, specify your desired electrode (aka channel) options: Folders: Each folder corresponds to a block, aka a period or session of continuous electrode recording. Select the blocks that correspond to the trials to analyze. (E.g. for KC, you could select blocks 003 and 004.) Electrodes: Indicate the electrodes to analyze. Note that it is recommended that you run the preprocessing steps on all electrodes at once. (E.g. for KC, you should indicate 1-92.) Sample Rate: Indicate the sample rate of iEEG recording equipment; this value will determine the rate at which the preprocessing will be run. For demo subjects, indicate 2000. Physical Unit: Indicate the units to use to measure voltage. Demo data can be kept at the default as-is (no change) option. File Format: RAVE currently supports six file formats for iEEG data. Demo data is stored using .mat/.h5 files, in which one file represents one electrode in a given block. (For guidance when selecting a file format, RAVE will briefly describe the format and display a sample organization of the directory.) Click the Check Subject button to proceed. (Note: this process can take a few minutes; progress will be displayed via pop-ups in the bottom right.) Click the Start Import button to proceed. (Note: this process can take a few minutes.) The demo subject has successfully been imported into RAVE. Proceed to the preprocessing modules for further cleaning of this data. The following screenshot summarizes the data loading process: "],["importing-your-own-data.html", "4.4 Importing Your Own Data", " 4.4 Importing Your Own Data If ready to start using RAVE with lab data, follow the steps below to import the data so that it can be preprocessed and used in future modules. 4.4.1 Organizing Your Directories rave::archive_subject "],["preprocessing.html", "Chapter 5 Preprocessing", " Chapter 5 Preprocessing The following steps will walk through the preprocessing of the raw iEEG signal data so that it can optimally be used in future analysis modules. The corresponding modules are: (These must be done first, in order:) Notch Filter Wavelet Referencing (These can be done after, in any order:) Surface Registration Localization Generate Epoch "],["step-1-import-signals.html", "5.1 Step #1: Import Signals", " 5.1 Step #1: Import Signals This step involves importing iEEG data into RAVE so that it can be preprocessed and used in future modules. Step 1.1: Select project &amp; subject First, use the drop down menu to specify which project the cleaned subject data will be stored in. To create a new project, select ‚ÄúNew Project‚Äù from the drop down menu and indicate the desired project name. Note that by default, this project folder will be created within the rave_data folder of the data directory (data_dir), in a new folder for the subject. Next, use the drop down menu to select the code for the subject whose data to import. Note that a subject‚Äôs data should be stored in its own folder within the raw directory (raw_dir folder) within therave_data folder. Click the ‚ÄúCreate Subject‚Äù button to proceed to the next step. Step 1.2: Format &amp; session blocks RAVE defines a block/session as a period of continuous electrode recording. Here, first select the blocks that correspond to the trials to analyze. Note that when a block is selected, a preview of the files it contains will pop-up to the right. This feature helps check that the way the data is stored is consistent with the file type selected. Then, specify the file format the iEEG data is stored in. RAVE currently supports four file formats: .mat/.h5 file per electrode per block single .mat/.h5 file per block single EDF(+) file per block single BrainVision file Note that when a format from the drop down is selected, a brief description of that specific format will pop-up underneath the menu. For more information on these file types, visit the Q&amp;A at Importing Data Step 1.3: Channel information RAVE equates a channel to an electrode. Set the following specifications for the channels: Data file: Channel numbers: Indicate the electrodes to analyze. It is recommended that the preprocessing steps are run on all electrodes at once. Note that RAVE can automatically detect potential electrodes based on the specified blocks and file type; this suggestion is displayed at the bottom of the panel. Physical unit: Indicate the units used to measure voltage. Sample rate: Indicate the rate of the iEEG recording equipment; this value will determine the rate at which the preprocessing will be run. Now, select the Validate &amp; Import button to validate your data. A pop-up will soon appear asking about readiness to import your data. Please double check all the information entered is correct, and then select the Import Data button to proceed. A progress bar will appear in the bottom left corner. A pop-up will soon appear indicating that the subject data was successfully imported into RAVE! Now, use the menu on the left side of the screen to select the first preprocessing module, notch filter. "],["step-2-notch-filter.html", "5.2 Step #2: Notch Filter", " 5.2 Step #2: Notch Filter What is a notch filter? A notch filter blocks a given frequency or a narrow range of frequencies (aka a ‚Äúbandwidth‚Äù) from a signal without affecting the rest of that signal. It is often used to minimize line noise interference in raw iEEG data, which helps ensure that future analyses only consider actual brain data. A common source of this interference is the amplifier used in recording set-ups to convert electrode signals into a form readable by the computer. This interference is commonly introduced at 60 Hz, since that is the standard frequency used in the North American electrical grid system. To apply the notch filter, RAVE performs a fast fourier transform (FFT) of the signal. To learn more about FFT, visit the Q&amp;A section at Notch Filter. To apply the notch filter to your data, follow the steps below. Begin in the Data Selection window to specify which data to perform the notch filter on . Use the drop down to indicate the desired project and subject. Note that pressing the Sync from [Import LFP] module link will automatically select the project and subject that was just imported in the Import Signals module. Proceed by selecting the Load Subject button. A new screen will load with three panels: Filter Settings, Inspection, and Notch. Refer to the following screenshot for guidance. Sample Notch Filter Screen Filter Settings: Begin my indicating the desired configurations for the filter(s). Base frequency refers to the frequency introduced by the amplifier that should be removed. By default, this is set as 60 Hz as that is the frequency introduced by most iEEG amplifiers. x Times sets the multipliers of the base frequency to remove by the filter. This feature accounts for harmonics (waves with frequencies that are positive integer multiples of the base frequency), which result because the signal from the amplifier is not a pure sine wave when undergoing FFT analysis. By default, this value is set as ‚Äú1,2,3‚Äù based on the harmonics that commonly result in iEEG recording set-ups. This default means that 60 Hz (base frequency * 1), 120 Hz (base frequency * 2), 180 Hz (base frequency * 3) are the frequencies that the notch filter will remove. +- Bandwidth (Hz) refers to how wide to make each filter; a higher number will remove a wider range of frequencies whereas a lower number will remove a narrower range of frequencies. Enter one number for each filter. By default, this value is set to 1,2,2 ‚Äì in other words, the filters will remove the bandwidths 59 - 61 Hz (aka 60 Hz +/- 1), 118 - 122 Hz (aka 120 Hz +/- 2), 178 - 182 Hz (aka 180 Hz +/- 2) respectively. Based on these configurations, the bottom of the panel will automatically display a summary of how many filters there are and the bandwidths each will remove. Click the blue Apply Notch Filters button to apply the filters to the data. A pop-up will appear showing a summary of the configurations. Click ‚ÄúConfirm‚Äù to proceed. Inspection: Controls settings of the figures displayed in the Notch: Inspect Signals panel located to the right. Use the block and electrode drop down menus to select the data to display in the Notch: Inspect Signals panel. You can use the previous and next buttons to easily switch between which electrode‚Äôs data is displayed within a selected recording session. The window length slider controls the power range displayed for the Welch periodograms. The more the slider is moved to the right, the wider the dB range on the y-axis. The frequency limit slider controls the frequency range for the Welch periodograms. The more the slider is moved to the right, the higher the frequencies that will be displayed on the x-axis. The number of histogram bins slider controls how wide the voltage ranges on the horizontal axis of the histogram are, where each bin represents a vertical bar on the graph. Choosing a larger number will create narrower voltage ranges and thus more vertical bars, whereas choosing a smaller number will create wider voltage ranges and thus fewer vertical bars. Moving the slider can give a more precise look at which voltages are most represented in the electrode signal. Notch: Inspect Signals: Displays *raw and filtered iEEG signals for each channel whose data was imported. The top Local Field Potential Graph plots voltage versus time in seconds to show the raw signal that was recorded from the selected electrode. The red lines on the graph reflect the normalization. The leftmost Welch Periodogram estimates the power of the signal at its component frequencies. Before applying the notch filter, only the original graph will be shown in grey. After the notch filter has been applied, the filtered signal will be shown in red; it should visibly be evident thaat the the power of the signal is reduced at the base and harmonic frequencies. To learn more about the calculation of the Welch Periodogram, visit the Q&amp;A at Notch Filter. The center Welch Periodogram is the same as the leftmost periodogram, except it is transformed to have a logarithmic x-axis. This graph makes viewing the signals at lower frequencies easier. The Histogram Original plots frequency on the vertical axis and voltage on the horizontal axis to depict how often each range of voltages occurs in the signal. To download these figures, simply click the Download as PDF link at the bottom of the Inspection panel. This will generate a PDF file in a new tab with a slide for each electrode within each block. Now, use the menu at left to proceed to the wavelet module! "],["step-3-wavelet.html", "5.3 Step #3: Wavelet", " 5.3 Step #3: Wavelet Once you click the wavelet tab on the left menu, a data selection window will appear to select the project and subject whose data to apply the wavelet decomposition to. (Remember clicking the ‚Äúsync from [import LFP] module‚Äù will automatically select the subject that was just imported.) Note: The notch filter must have been applied to the selected subject before trying to apply the wavelet transformation. After selecting the ‚ÄúLoad Subject‚Äù button, a new screen will load with two panels: Wavelet Settings and Wavelet Kernel. Refer to the following screenshot for guidance. Sample Wavelet Decomposition Screen Wavelet decomposition is a type of time frequency analysis that is used for non-stationary signals (i.e.¬†properties change over time), like that of iEEG. It separates the signal into differing frequency and phase components, which is helpful because signals in the brain are very dynamic. This process makes it so that changes in the signal‚Äôs power spectra can be visualized across both frequency and time. To learn more about how wavelet transform works, visit the Q&amp;A at Wavelet. In this module, RAVE will: - downsample the signal before running the wavelet, if desired - run a wavelet on each block in the selected subject‚Äôs folder - downsample the wavelet coefficients to 100.0 Hz to reduce the amount of space needed to save the information onto the computer‚Äôs disk Wavelet Settings: Begin by setting the basic configurations: Power sample rate refers to the rate at which the signal will be taken into time frequency decomposition. By default, it is recommended to keep this set to the default 100 Hz; this balances the data so that precision is conserved without taking up too much space on the disk. Typically, this value should only be increased if neural signals will be analyzed at very high frequencies. (Note: this is not the same as the signaling rate used in the iEEG recording set-up. For further explanation, see the Q&amp;A at Wavelet.) The Down-sample before wavelet drop down menu has the option to select a factor of 1, 2, 4, or 8 to use to reduce the sample rate. Reducing the sampling rate is done to run the wavelet transform faster and use less of the computer‚Äôs disk space. Note that selecting 1 equates to no reduction in the sampling rate. Reducing the rate by a higher factor allows for analyzing a greater frequency range. To further reduce the amount of time it takes to run the wavelet, please select the use single float precision checkbox. Note: Setting the down-sample value to 1 and leaving the box unchecked will preserve precision of the calculations and is appropriate if there are many hours available to run the wavelet. However, if quick processing of data is needed, such as in clinical situations, it is better to downsample and use single float precision. Proceed by setting the frequency and cycle configurations: The select method to generate wavelet parameters drop down menu determines how the configurations for the wavelet will be set. By default, it is set to ‚Äúbuilt in‚Äù, meaning that the frequency and cycle settings can be set manually on the RAVE interface (see bullet points below). Alternatively, selecting ‚Äúupload preset‚Äù is commonly used to save time if one already has their own set configurations they want to use on the data. An upload button will appear; please upload the preset in the form of a csv with two columns for the frequency and cycles. Proceed straight to running the wavelet via the blue ‚Äúrun wavelet‚Äù button if a preset is uploaded. Use the frequency range slider to select the range of frequencies that will be decomposed with the wavelet. The value selected with the frequency step size slider depends on the frequency desired after the wavelet is performed. Use the wavelet cycles slider to choose the range of cycles to use in the transform. Note that a larger number of cycles will lead to more precise frequency analysis, whereas a smaller number of cycles will lead to more precise temporal analysis. Wavelet Kernel: The figures displayed on this panel visually display the properties of the wavelet given the selected configurations. The Wavelet Kernels (Real &amp; Imaginary) shows the kernel at given frequencies in Hz and times in seconds (aka wavelet length). The Wavelet Length | Frequency graph plots the length of the kernel in seconds at different frequencies in Hz. The Wavelet Cycle | Frequency graph plots the number of cycles for the wavelet at different frequencies in Hz. To download these figures, hover over the top left corner of the panel and a small, grey save icon will appear. Clicking on the icon will generate a pdf with the figures. To download the kernel parameters, click the blue download kernel parameters link at the bottom of the window. This will generate a csv file with each frequency and its corresponding number of cycles. To simply view the parameters on the interface, click anywhere on the panel and it will switch the view to display a table with the frequency and cycle data; click anywhere on this table to switch back to the figure view. (Alternatively, on figure view, click on the table icon in the top right corner of the panel.) When finished setting the configurations and reviewing the figures, select the blue Run Wavelet button. As shown below, a pop-up will appear on the screen asking to confirm the subject, frequencies, # of cycles, and precision selected for the wavelet transformation. Click ‚Äúconfirm‚Äù to proceed, or \"confirm and run in background to continue using RAVE during the decomposition process. Note that this process can take up to 30 minutes; progress bars for each task will be displayed in the lower right corner. Sample Wavelet Decomposition Confirmation Window The process is completed if a ‚Äúsuccess‚Äù pop-up appears. This means that the signal data for the electrodes within each of the subject‚Äôs blocks have been down-sampled (if desired), decomposed by the wavelet into time-frequency data, and down-sampled again. Proceed to the next module, referencing! "],["step-4-reference-channels.html", "5.4 Step #4: Reference Channels", " 5.4 Step #4: Reference Channels Common average referencing After the four steps above have been completed, the remaining modules below can be done in any order: "],["surface-electrodes.html", "5.5 Surface &amp; Electrodes", " 5.5 Surface &amp; Electrodes The surface &amp; electrodes section is composed of two modules: 5.5.1 Surface &amp; Registration The Surface &amp; Registration module has the goal of importing raw magnetic resonance (MR) and computerized tomography (CT) images into RAVE, so that they can be used in future analyses. There are two panels to note: Data settings and Command-line settings. Refer to the following screenshot for guidance. Sample Surface &amp; Registration Window Data Settings: Start by using the project and subject drop down menus to select the subject whose MRI and CT images that will be imported. Once again, using the blue ‚Äúsync project &amp; subject from [Import LFP] module‚Äù link at the bottom of the panel will automatically select the project and subject that was just being worked on. Next, use the MRI drop down menu to select the raw MRI image for the selected subject. RAVE currently accepts two input types for MRI images: DICOM: submit a folder of DICOM files, representing a series of 2D brain slices (e.g.¬†______) Nifti: submit a single Nifti file representing the full 3D brain scan (e.g.¬†subject_MRI.nii) Note: Select the checkbox ‚ÄúSkip the FreeSurfer Reconstruction‚Äù if reconstructing the subject‚Äôs cortical surface model is not necessary. By default, this box will be checked. Similarly, use the Raw CT DICOM folder drop down menu to select the raw CT image for the selected subject. Your input should be a DICOM folder () Note: Select the checkbox ‚ÄúSkip the CT Co-Registration‚Äù if it is not desired to align and overlay the subject‚Äôs CT scan with their MRI image. By default, this will be unchecked because aligning/overlaying this data allows for the accurate localization of electrodes. For more information on these file formats, visit the Q&amp;A at Surface &amp; Registration. Then, proceed to the command-line settings panel. Command-line settings: The following steps will involve the computer‚Äôs command-line interface. (On Mac, this refers to the Terminal. On Windows, it refers to Command Prompt.) Dcm2niix path: Dcm2niix is a library that is used to convert neuroimaging data from DICOM files to a Nifti file. Enter FreeSurfer home (‚ÄòFREESURFER_HOME‚Äô, needed for surface reconstruction): FSL home (‚ÄòFSLDIR‚Äô, needed for co-registration): Now, click the blue ‚ÄúCheck data and command-line tools‚Äù button. A pop-up will appear indicating the external commands that will be used based on what was entered for Dcm2niix path, FreeSurfer home, and FSL home above. Please also pay attention to any warnings that will be listed (e.g.¬†if RAVE can not find FSL-flirt). When ready, hit ‚Äúproceed‚Äù. The following screen will appear, with four panels: Subject Information, Import DICOM Images, Surface Reconstruction, and Co-Registration CT to T1. Refer to the following screenshot for guidance. Surface and Registration Screen 2 Subject Information: The project and subject whose MRI and CT data is currently being used will be displayed here. A task list will also be displayed. By default, three tasks will be listed: 1). Convert .dcm images to .nii, 2). Surface reconstruction, and 3). CT co-registration. If on the previous screen it was opted to skip FreeSurfer reconstruction or CT co-registration, those tasks won‚Äôt be listed. When a task is completed, the blue ‚Äúx‚Äù will change to a green checkmark. Import DICOM Images: Begin here to convert DICOM images to the Nifti format using the dcm2niix external library. Note: This script requires the Unix sh terminal in order to run commands read from the command-line interface. If using a Mac, this should already be provided. If using Windows, please install the Linux sub-system. Specify the following configurations using a drop-down menu: ** Merge 2D slices from same series regardless of echo, exposure, etc: ** Crop 3D acquisition: Based on these configurations, a series of commands will be automatically generated in the greyspace below. As mentioned earlier, it is recommended to copy these commands and run them on the computer‚Äôs command-line interface (e.g.¬†Terminal). Select the ‚Äúsave &amp; run by yourself‚Äù button to save the commands for manual use. However, to run these commands directly from RAVE, select the grey ‚ÄúRun from RAVE‚Äù button. Note: The grey text represents comments. The purple texts are the actual commands that will be run by the computer. Surface Reconstruction: This panel sets the specifications desired for the reconstruction of the subject‚Äôs cortical surface. It utilizes FreeSurfer, a package for the visualization and analysis of neuroimaging data. Note: This script requires the Unix bash terminal in order to run commands read from the command-line interface. If using a Mac, this should already be provided. If using Windows, please install the Linux sub-system. Start by selecting the MRI File desired. Next, select the recon flag, which refers to which FreeSurfer steps are desired for the reconstruction of the brain model. Visit the FreeSurfer website to learn more about the seven choices. Use the drop-down menu on RAVE to select the recon flag that is fitting for the project. A screenshot has been included below for convenience: &gt;Note: Most flags can take several hours for the computer to run. If the quickest flag is desired, select -autorecon1 in the drop-down menu; it encompasses minimal steps and so only takes 10 minutes to run. Proceed to the ‚ÄúRemove existing work before running the command (if applicable)‚Äù checkbox. By default, this will be unchecked ______ Commands will be generated in the greyspace below. Once again, to run them manually, click the blue ‚ÄúSave &amp; run by yourself‚Äù button. To have RAVE invoke system command, select the ‚ÄúRun from RAVE‚Äù button. Co-Registration CT to T1: This panel will generate commands to align and overlay the subject‚Äôs MRI &amp; CT images. FSL-flirt, a tool for registering these images, will be used. Simply use the drop down menu to select the CT file. Commands will be available in the greyspace below. Once again, select the appropriate button based on whether the commands will be run manually or through RAVE. Note: This script requires the Unix bash terminal in order to run commands read from the command-line interface. If using a Mac, this should already be provided. If using Windows, please install the Linux sub-system. At this point, the MRI and CT images should have been converted to the Nifti forrmat, and based on the selected configurations, the reconstruction of the subject‚Äôs brain model and co-registration of the MRI &amp; CT images will or will not have been processed. Now, proceed to the electrode localization module to begin identifying electrodes! 5.5.2 Electrode Localization RAVE‚Äôs electrode localization module features a built-in 3D viewer and allows for the quick and precise identification of where in the brain electrodes are located. The module is based on the CT image‚Äôs visualization of electrodes and the MRI‚Äôs visualization of brain structure. When the electrode localization tab is selected, two panels will appear on the screen: Data Selection &amp; Electrode Plan. Refer to the following screenshot for guidance. Data Selection: Begin in the data selection panel at left. Use the project and subject drop down menus to select the subject whose electrodes you wish to localize. You can once again use the ‚ÄúSync from [Import LFP] module‚Äù to automatically select the project and subject you were just working on. Next, use the drop down menu in choose CT to select the CT scan that was converted to the Nifti format and aligned to the MRI image in the previous module. It is alternatively possible to upload a CT image already in the Nifti format directly using the browse button. If it is preferred not to localize with the CT image, select the checkbox ‚ÄúDo not localize with CT.‚Äù By default, this will be unchecked as _______. Proceed to the Electrode Plan panel. Electrode Plan: This panel allows for the creation of groups for the subject‚Äôs electrodes. For each group, specify the: * Label: the desired name for the group. * Dimension: the number of electrodes within the group. * Type: the type of exam the electrodes were used in Select from electroencephalogram (EEG), intracranial EEG (iEEG), stereotactic EEG (sEEG), ElectroCochleoGraphy (ECoG), or ‚Äúother‚Äù. Note that for each group, a summary will be displayed to indicate the individual electrode labels (e.g.¬†G1 - G32), as well as total number of electrodes. Scroll through the panel to review all electrode groups. Use the plus button in the bottom left corner of the panel to add a new group, or the minus button to delete the bottom-most group. When the groups are ready, click the blue Load Subject button to proceed. If there are any errors, a pop-up will appear indicating the error and a recommended fix (e.g.¬†‚Äúinvalid CT file. Please specify or upload your own.‚Äù) If there are no errors, a ‚Äúloading in progress‚Äù pop-up will appear indicating that the CT file and 3D viewer are being loaded. "],["generate-epoch.html", "5.6 Generate Epoch", " 5.6 Generate Epoch "],["qas.html", "Chapter 6 Q&amp;As", " Chapter 6 Q&amp;As This page contains possible questions that may arise when using RAVE and their answers. Questions are organized by section. "],["installation.html", "6.1 Installation", " 6.1 Installation Question: When updating RAVE, I received a ‚Äútimeout of 60 seconds was reached‚Äù warning message. How do I fix this? Answer: Try switching to a faster network connection. Question: I already have R and RStudio downloaded. Can I skip the prerequisites? Answer: RAVE is dependent on the most recent versions of these applications, so please make sure they are properly updated. Be sure to also review the other pre-requisite steps, like installing Homebrew and the system libraries. The most common reason for issues in the installation of RAVE is failure to properly download these prerequisites. Question: How can I check my computer‚Äôs OS version or CPU type? Answer: If using a Mac, this can be found by clicking the apple logo at the top left of the screen, and then clicking ‚ÄúAbout this Mac‚Äù. The version and processor (CPU type) will be listed there. Question: I received a ‚Äúthe following directories are not writable by your user‚Äù error. How do I fix this? Answer: If there are multiple accounts on the computer but only one of them has homebrew installed, this error may result. To resolve it, change the ownership of the directories to the current user and make sure this user has write permission. "],["getting-started-with-rave.html", "6.2 Getting Started with RAVE", " 6.2 Getting Started with RAVE Question: I copied a command into the RStudio console, but nothing is happening. What is the issue? Make sure to click the red stop sign at the top right of the console to stop the current command. This is necessary to execute a different command. "],["downloading-demo-data.html", "6.3 Downloading Demo Data", " 6.3 Downloading Demo Data Question: I received this message when trying to import a demo subject. /Users/aliavyanne/rave_data/raw_dir/YAI (NOT found) /Users/aliavyanne/rave_data/bids_dir//Test/sub-YAI (NOT found) How do I fix this? Answer: Download the demo subject before importing them. Use the following command to download the demo subject YAI: rave::download_sample_data(&quot;YAI&quot;) Question: Where does the demo data come from? Answer: The demo data available in RAVE is sourced from experiments run by the Beauchamp Lab at the Perelman School of Medicine, which investigates the neural mechanisms for multisensory integration and visual perception in human subjects. Read more at: https://www.med.upenn.edu/beauchamplab/ "],["importing-data.html", "6.4 Importing Data", " 6.4 Importing Data Question: What does the term ‚Äúchannel‚Äù refer to? Answer: In the early design of RAVE, we focused on exploring one channel per electrode cases, hence we equivalent ‚Äúchannel‚Äù to ‚Äúelectrode‚Äù here. Question: In step 3, why are the ‚Äúfolders‚Äù and ‚Äúelectrode‚Äù fields designated as ‚Äúread-only‚Äù? Answer: If these fields are designated as ‚Äúread only,‚Äù this means you have already imported the entered subject. To preserve reproducibility, once raw data for a subject is imported and notch filtered, the channel options can not be changed. Question: In step 3, what does the term ‚Äúblock‚Äù refer to? Answer: RAVE defines ‚Äúblock‚Äù as a period or session of continuous recording. A block should be named with a zero-padded integer according to the order they were recorded (e.g.¬†001 for the first session, 002 for the second). Question: On the import widgets panel at bottom right, I got a message that electrode files are missing. How do I resolve this? Answer: When selecting the ‚Äúcheck subject‚Äù button, the bottom right panel will indicate if any electrode files are missing based on the electrode numbers you entered in step three. Be sure to double check that the correct electrode numbers in step 3 were indicated. Question: Does RAVE automatically validate my data? Answer: Check for yourself to make sure that each block contains the appropriate files. RAVE will not automatically check this. Question: How do I know which file format to select in step 3? Answer: When you select a file format from the drop down, RAVE will display brief information on what that format entails and a sample organization for the data directory. Select the format that matches that of the data. Question: Where are my inputs and configurations stored for a given subject? Answer: This information is stored within data_dir/&lt;project&gt;/subject&gt;/rave/preprocess/rave.yaml of the home directory. "],["notch-filter.html", "6.5 Notch Filter", " 6.5 Notch Filter Question: What is fast fourier transform (FFT)? Answer: FFT is an algorithm that can quickly compute the discrete Fourier transform (DFT) of a signal. It transforms the signal from a function of time to the a fucntion of frequency by dividing the signal into its frequency components. Each component constitutes an oscillation with a unique amplitude. This procedure makes it easier to extract a base frequency and its harmonics (e.g.¬†of the amplifier) to perform the notch filter. Question: What is a Welch Periodogram? Answer: The Welch method allows for the estimation of the power of a signal at its component frequencies. The time signal is separated into individual blocks, a periodogram is created for each block, and then these periodograms are averaged to estimate the power. The Welch method reduces noise in the power estimation compared to other methods. (Note: a periodogram identifies the dominant frequencies in a time signal.) Question: How can I switch between subjects while on the notch filter or wavelet modules? Answer: In the bottom right corner of the screen, there is a rectangular button that lists the project and subject currently being analyzed ‚Äì e.g.¬†‚Äúdemo/YAD‚Äù. Click that button to go back to the load data screen and select a different project and/or subject. Question: I‚Äôve already performed the notch filter, but RAVE is not letting me update my channel options. How can I fix this? Answer: Once the data is imported and notch filtered, you cannot change the channel options. You should make a new project to change the channel options in this case. Question: This error popped up when I tried loading a subject into the notch filter module. What do I do? ‚ÄúFound an error while loading the power data: The subject exists but its signal has not been imported yet.‚Äù Answer: Use the menu at left to go back to the ‚Äúimport signals‚Äù module. It is necessary to import that subject using the ‚Äúvalidate &amp; import‚Äù button. "],["wavelet.html", "6.6 Wavelet", " 6.6 Wavelet Question: What does wavelet transformation actually entail? Answer: A complex wavelet will undergo convulotion with the iEEG signal. The iEEG signal will then be translated across the time axis, using either high frequency or low frequency wavelets. The result is good frequency resolution but poor temporal resolution at low frequencies, and good temporal resolution and poor frequency resolution at high frequencies. Note that a wavelet is created by multiplying a Gaussian function with a sine function. See more: https://sapienlabs.org/lab-talk/time-frequency-analysis-and-wavelets/v Question: Why can‚Äôt I down-sample the wavelet coefficients to a sample rate less than or equal to 1? Question: How is the power sample rate different from the rate used in the iEEG recording setup? Answer: The recording rate is associated with raw voltage data, whereas the power sample rate is associated with time frequency decomposition. "],["surface-registration-1.html", "6.7 Surface &amp; Registration", " 6.7 Surface &amp; Registration Question: What is the command-line? Answer: The computer‚Äôs command-line is an interface that allows the user to run programs, add/delete files, and use other text-based commands. In the context of surface &amp; registration, RAVE relies on the command-line to run dcm2niix (converts DICOM files to Nifti format), FreeSurfer (allows for the reconstruction of the cortical surface), and FSL home (aligns/overlays the CT image with the MRI data). "],["electrode-localization-1.html", "6.8 Electrode Localization", " 6.8 Electrode Localization Question: When trying to load a subject, why did I recieve this error? ‚ÄúThe electrode pllan table (n=0) has inconsistent length with registered electrode length (n=84).‚Äù Answer: "]]
